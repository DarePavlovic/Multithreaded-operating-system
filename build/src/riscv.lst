GAS LISTING /tmp/cckEJyLA.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB36:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../h/riscv.hpp"
   2:src/riscv.cpp **** #include "../h/tcb.hpp"
   3:src/riscv.cpp **** #include "../h/sem.hpp"
   4:src/riscv.cpp **** #include "../lib/console.h"
   5:src/riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   6:src/riscv.cpp **** #include "../test/printing.hpp"
   7:src/riscv.cpp **** //#include "../lib/mem.h"
   8:src/riscv.cpp **** 
   9:src/riscv.cpp **** void Riscv::popSppSpie()
  10:src/riscv.cpp **** {
  12              		.loc 1 10 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  11:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");  //jedini nacin je upisom u kontrolni registar
  20              		.loc 1 11 5
  21              		.loc 1 11 38 is_stmt 0
  22              	#APP
  23              	# 11 "src/riscv.cpp" 1
  12              	    mc_sstatus(SSTATUS_SPP);
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 12 5 is_stmt 1
  27              	.LVL0:
  28              	#NO_APP
  29              	.LBB42:
  30              	.LBB43:
  31              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef risc_hpp
   2:src/../h/riscv.hpp **** #define risc_hpp
   3:src/../h/riscv.hpp **** #include "../lib/hw.h"
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** class Riscv
   6:src/../h/riscv.hpp **** {
   7:src/../h/riscv.hpp **** public:
   8:src/../h/riscv.hpp **** 
   9:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  10:src/../h/riscv.hpp ****     static void popSppSpie();
  11:src/../h/riscv.hpp **** 
  12:src/../h/riscv.hpp ****     static void pushRegisters();
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     static void popRegisters();
  15:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cckEJyLA.s 			page 2


  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register stvec
  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cckEJyLA.s 			page 3


  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // supervisor trap
  80:src/../h/riscv.hpp ****     static void supervisorTrap();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** private:
  83:src/../h/riscv.hpp ****     //obradjuje sve za prekid
  84:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  85:src/../h/riscv.hpp **** };
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  88:src/../h/riscv.hpp **** {
  89:src/../h/riscv.hpp ****     uint64 volatile scause;
  90:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  91:src/../h/riscv.hpp ****     return scause;
  92:src/../h/riscv.hpp **** }
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  95:src/../h/riscv.hpp **** {
  96:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  97:src/../h/riscv.hpp **** }
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 100:src/../h/riscv.hpp **** {
 101:src/../h/riscv.hpp ****     uint64 volatile sepc;
 102:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 103:src/../h/riscv.hpp ****     return sepc;
 104:src/../h/riscv.hpp **** }
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 107:src/../h/riscv.hpp **** {
 108:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 109:src/../h/riscv.hpp **** }
 110:src/../h/riscv.hpp **** 
 111:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 112:src/../h/riscv.hpp **** {
 113:src/../h/riscv.hpp ****     uint64 volatile stvec;
 114:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 115:src/../h/riscv.hpp ****     return stvec;
 116:src/../h/riscv.hpp **** }
 117:src/../h/riscv.hpp **** 
 118:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 119:src/../h/riscv.hpp **** {
 120:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 121:src/../h/riscv.hpp **** }
 122:src/../h/riscv.hpp **** 
 123:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 124:src/../h/riscv.hpp **** {
 125:src/../h/riscv.hpp ****     uint64 volatile stval;
 126:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 127:src/../h/riscv.hpp ****     return stval;
 128:src/../h/riscv.hpp **** }
 129:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cckEJyLA.s 			page 4


 130:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 131:src/../h/riscv.hpp **** {
 132:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 133:src/../h/riscv.hpp **** }
 134:src/../h/riscv.hpp **** 
 135:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 136:src/../h/riscv.hpp **** {
 137:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 138:src/../h/riscv.hpp **** }
 139:src/../h/riscv.hpp **** 
 140:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 141:src/../h/riscv.hpp **** {
 142:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 143:src/../h/riscv.hpp **** }
 144:src/../h/riscv.hpp **** 
 145:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 146:src/../h/riscv.hpp **** {
 147:src/../h/riscv.hpp ****     uint64 volatile sip;
 148:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 149:src/../h/riscv.hpp ****     return sip;
 150:src/../h/riscv.hpp **** }
 151:src/../h/riscv.hpp **** 
 152:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 153:src/../h/riscv.hpp **** {
 154:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 155:src/../h/riscv.hpp **** }
 156:src/../h/riscv.hpp **** 
 157:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 158:src/../h/riscv.hpp **** {
 159:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 160:src/../h/riscv.hpp **** }
 161:src/../h/riscv.hpp **** 
 162:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 163:src/../h/riscv.hpp **** {
 164:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
  32              		.loc 2 164 5
  33              		.loc 2 164 68 is_stmt 0
  34 0010 93070010 		li	a5,256
  35              	#APP
  36              	# 164 "src/../h/riscv.hpp" 1
 165              	}
  37              		csrc sstatus, a5
  38              	# 0 "" 2
  39              	.LVL1:
  40              	#NO_APP
  41              	.LBE43:
  42              	.LBE42:
  13:src/riscv.cpp ****     __asm__ volatile("sret");   //sret ce vratiti tamo gde je reklo sepc, a to je nit koja je ranij
  43              		.loc 1 13 5 is_stmt 1
  44              		.loc 1 13 29 is_stmt 0
  45              	#APP
  46              	# 13 "src/riscv.cpp" 1
  14              	}
  47              		sret
  48              	# 0 "" 2
  49              		.loc 1 14 1
  50              	#NO_APP
GAS LISTING /tmp/cckEJyLA.s 			page 5


  51 001c 03348100 		ld	s0,8(sp)
  52              		.cfi_restore 8
  53              		.cfi_def_cfa 2, 16
  54 0020 13010101 		addi	sp,sp,16
  55              		.cfi_def_cfa_offset 0
  56 0024 67800000 		jr	ra
  57              		.cfi_endproc
  58              	.LFE36:
  60              		.section	.rodata.str1.8,"aMS",@progbits,1
  61              		.align	3
  62              	.LC0:
  63 0000 47524553 		.string	"GRESKA! SCAUSE: "
  63      4B412120 
  63      53434155 
  63      53453A20 
  63      00
  64 0011 00000000 		.align	3
  64      000000
  65              	.LC1:
  66 0018 2C205345 		.string	", SEPC: "
  66      50433A20 
  66      00
  67              		.text
  68              		.align	2
  69              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  71              	_ZN5Riscv20handleSupervisorTrapEv:
  72              	.LFB37:
  15:src/riscv.cpp **** 
  16:src/riscv.cpp **** void Riscv::handleSupervisorTrap()
  17:src/riscv.cpp **** {
  73              		.loc 1 17 1 is_stmt 1
  74              		.cfi_startproc
  75 0028 130101FB 		addi	sp,sp,-80
  76              		.cfi_def_cfa_offset 80
  77 002c 23341104 		sd	ra,72(sp)
  78 0030 23308104 		sd	s0,64(sp)
  79 0034 233C9102 		sd	s1,56(sp)
  80 0038 23382103 		sd	s2,48(sp)
  81              		.cfi_offset 1, -8
  82              		.cfi_offset 8, -16
  83              		.cfi_offset 9, -24
  84              		.cfi_offset 18, -32
  85 003c 13040105 		addi	s0,sp,80
  86              		.cfi_def_cfa 8, 0
  18:src/riscv.cpp ****     uint64 scause = r_scause();
  87              		.loc 1 18 5
  88              	.LBB44:
  89              	.LBB45:
  89:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  90              		.loc 2 89 5
  90:src/../h/riscv.hpp ****     return scause;
  91              		.loc 2 90 5
  90:src/../h/riscv.hpp ****     return scause;
  92              		.loc 2 90 72 is_stmt 0
  93              	#APP
  94              	# 90 "src/../h/riscv.hpp" 1
  95              		csrr a5, scause
GAS LISTING /tmp/cckEJyLA.s 			page 6


  96              	# 0 "" 2
  97              	#NO_APP
  98 0044 2334F4FC 		sd	a5,-56(s0)
  91:src/../h/riscv.hpp **** }
  99              		.loc 2 91 5 is_stmt 1
  91:src/../h/riscv.hpp **** }
 100              		.loc 2 91 12 is_stmt 0
 101 0048 833484FC 		ld	s1,-56(s0)
 102              	.LVL2:
 103              	.LBE45:
 104              	.LBE44:
  19:src/riscv.cpp **** 
  20:src/riscv.cpp ****     if(scause == 0x0000000000000008UL || scause == 0x0000000000000009UL){
 105              		.loc 1 20 5 is_stmt 1
 106              	.LBB46:
 107              		.loc 1 20 39 is_stmt 0
 108 004c 138784FF 		addi	a4,s1,-8
 109              		.loc 1 20 5
 110 0050 93071000 		li	a5,1
 111 0054 63F4E708 		bleu	a4,a5,.L50
 112              	.LBE46:
  21:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;    //sepc prilikom ecall dobije vrednost same ecall in
  22:src/riscv.cpp **** 
  23:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();  //uzimamo njegov statusni registar
  24:src/riscv.cpp ****         size_t op_code;
  25:src/riscv.cpp ****         __asm__ volatile("mv %[op], a0":[op]"=r"(op_code));
  26:src/riscv.cpp **** 
  27:src/riscv.cpp **** 
  28:src/riscv.cpp ****         switch (op_code) {
  29:src/riscv.cpp ****             //mem_alloc op code
  30:src/riscv.cpp ****             case 0x1: {
  31:src/riscv.cpp ****                 size_t size;
  32:src/riscv.cpp ****                 __asm__ volatile("mv %[size], a1":[size]"=r"(size));
  33:src/riscv.cpp ****                 //size_t volatile size1 = MemoryAllocator::transferToNumBlock(size);
  34:src/riscv.cpp ****                 MemoryAllocator::mem_alloc(size + 1);
  35:src/riscv.cpp ****                 if(TCB::running!= nullptr)
  36:src/riscv.cpp ****                     TCB::running->numOfBlocks+=size;
  37:src/riscv.cpp ****                 break;
  38:src/riscv.cpp ****             }
  39:src/riscv.cpp ****             //mem_free op code
  40:src/riscv.cpp ****             case 0x2: {
  41:src/riscv.cpp ****                 void *pt;
  42:src/riscv.cpp ****                 __asm__ volatile("mv %[ptr], a1":[ptr]"=r"(pt));
  43:src/riscv.cpp ****                 MemoryAllocator::mem_free(pt);
  44:src/riscv.cpp **** 
  45:src/riscv.cpp ****                 break;
  46:src/riscv.cpp ****             }
  47:src/riscv.cpp ****             //thread_create op_code
  48:src/riscv.cpp ****             case 0x11:{         //thread_create
  49:src/riscv.cpp ****                 thread_t* handle;
  50:src/riscv.cpp ****                 __asm__ volatile("mv %[handle], a1":[handle]"=r"(handle));
  51:src/riscv.cpp ****                 void(*start_routine)(void*);
  52:src/riscv.cpp ****                 __asm__ volatile("mv %[body], a2":[body]"=r"(start_routine));
  53:src/riscv.cpp ****                 void* arg;
  54:src/riscv.cpp ****                 __asm__ volatile("mv %[arg], a3":[arg]"=r"(arg));
  55:src/riscv.cpp ****                 void* stack;
  56:src/riscv.cpp ****                 __asm__ volatile("mv %[stack], a6":[stack]"=r"(stack));
GAS LISTING /tmp/cckEJyLA.s 			page 7


  57:src/riscv.cpp **** 
  58:src/riscv.cpp ****                 int s=0;
  59:src/riscv.cpp ****                 if (handle == nullptr)
  60:src/riscv.cpp ****                     s = -1;
  61:src/riscv.cpp ****                 else {
  62:src/riscv.cpp ****                     *handle = TCB::createThread(start_routine, arg,(void*) stack, nullptr);
  63:src/riscv.cpp **** 
  64:src/riscv.cpp ****                     if(*handle==nullptr)
  65:src/riscv.cpp ****                         s=-1;
  66:src/riscv.cpp ****                 }
  67:src/riscv.cpp ****                 __asm__ volatile("mv a0, %[p]"::[p]"r"(s));
  68:src/riscv.cpp ****                 break;
  69:src/riscv.cpp ****             }
  70:src/riscv.cpp ****             //thread_exit op_code
  71:src/riscv.cpp ****             case 0x12:{
  72:src/riscv.cpp ****                 //pozvati thread_exit tipa int
  73:src/riscv.cpp ****                 int k = TCB::thread_exit();
  74:src/riscv.cpp ****                 __asm__ volatile("mv a0, %[p]"::[p]"r"(k));
  75:src/riscv.cpp ****                 break;
  76:src/riscv.cpp ****             }
  77:src/riscv.cpp ****             //thread_dispatch op_code
  78:src/riscv.cpp ****             case 0x13:{
  79:src/riscv.cpp ****                 TCB::dispatch();
  80:src/riscv.cpp ****                 break;
  81:src/riscv.cpp ****             }
  82:src/riscv.cpp ****             case 0x14:{     //thread_join
  83:src/riscv.cpp ****                 thread_t handle;
  84:src/riscv.cpp ****                 __asm__ volatile("mv %[handle], a1":[handle]"=r"(handle));
  85:src/riscv.cpp ****                 TCB::thread_join(handle);
  86:src/riscv.cpp ****                 break;
  87:src/riscv.cpp ****             }
  88:src/riscv.cpp ****             case 0x15:{
  89:src/riscv.cpp ****                 thread_t* handle;
  90:src/riscv.cpp ****                 __asm__ volatile("mv %[handle], a1":[handle]"=r"(handle));
  91:src/riscv.cpp ****                 void(*start_routine)(void*);
  92:src/riscv.cpp ****                 __asm__ volatile("mv %[body], a2":[body]"=r"(start_routine));
  93:src/riscv.cpp ****                 void* arg;
  94:src/riscv.cpp ****                 __asm__ volatile("mv %[arg], a3":[arg]"=r"(arg));
  95:src/riscv.cpp ****                 void* stack;
  96:src/riscv.cpp ****                 __asm__ volatile("mv %[stack], a6":[stack]"=r"(stack));
  97:src/riscv.cpp ****                 thread_t* parent;
  98:src/riscv.cpp ****                 __asm__ volatile("mv %[pare], a7":[pare]"=r"(parent));
  99:src/riscv.cpp ****                 int s=0;
 100:src/riscv.cpp ****                 if (handle == nullptr)
 101:src/riscv.cpp ****                     s = -1;
 102:src/riscv.cpp ****                 else {
 103:src/riscv.cpp ****                     *handle = TCB::createThread(start_routine, arg,(void*) stack, *parent);
 104:src/riscv.cpp **** 
 105:src/riscv.cpp ****                     if(*handle==nullptr)
 106:src/riscv.cpp ****                         s=-1;
 107:src/riscv.cpp ****                 }
 108:src/riscv.cpp ****                 __asm__ volatile("mv a0, %[p]"::[p]"r"(s));
 109:src/riscv.cpp ****                 break;
 110:src/riscv.cpp ****             }
 111:src/riscv.cpp ****             case 0x16:{
 112:src/riscv.cpp ****                 TCB::setJoin();
 113:src/riscv.cpp ****                 break;
GAS LISTING /tmp/cckEJyLA.s 			page 8


 114:src/riscv.cpp ****             }
 115:src/riscv.cpp ****             case 0x17:{
 116:src/riscv.cpp ****                 //getThreadId
 117:src/riscv.cpp ****                 int q = TCB::getThreadId();
 118:src/riscv.cpp ****                 TCB::dispatch();
 119:src/riscv.cpp ****                 __asm__ volatile("mv a0, %[p]"::[p]"r"(q));
 120:src/riscv.cpp ****                 break;
 121:src/riscv.cpp ****             }
 122:src/riscv.cpp ****             case 0x18:{     //setMaxThread
 123:src/riscv.cpp ****                 int num;
 124:src/riscv.cpp ****                 __asm__ volatile("mv %[id], a1":[id]"=r"(num));
 125:src/riscv.cpp ****                 TCB::setMaximumThreads(num);
 126:src/riscv.cpp ****                 break;
 127:src/riscv.cpp ****             }
 128:src/riscv.cpp ****             case 0x19:{
 129:src/riscv.cpp ****                 TCB *handle;
 130:src/riscv.cpp ****                 __asm__ volatile("mv %[id], a1":[id]"=r"(handle));
 131:src/riscv.cpp ****                 handle->pingFlag=true;
 132:src/riscv.cpp ****                 break;
 133:src/riscv.cpp ****             }
 134:src/riscv.cpp ****             case 0x21:{     //sem_open
 135:src/riscv.cpp ****                 sem_t* handle;
 136:src/riscv.cpp ****                 __asm__ volatile("mv %[handle], a1":[handle]"=r"(handle));
 137:src/riscv.cpp ****                 unsigned init;
 138:src/riscv.cpp ****                 __asm__ volatile("mv %[init], a2":[init]"=r"(init));
 139:src/riscv.cpp **** 
 140:src/riscv.cpp ****                 int s=0;
 141:src/riscv.cpp ****                 if (handle == nullptr)
 142:src/riscv.cpp ****                     s = -1;
 143:src/riscv.cpp ****                 else {
 144:src/riscv.cpp ****                     *handle = Sem::semOpen((int)init);
 145:src/riscv.cpp ****                     if(*handle==nullptr)
 146:src/riscv.cpp ****                         s=-1;
 147:src/riscv.cpp ****                 }
 148:src/riscv.cpp ****                 __asm__ volatile("mv a0, %[p]"::[p]"r"(s));
 149:src/riscv.cpp ****                 break;
 150:src/riscv.cpp ****             }
 151:src/riscv.cpp ****             case 0x22:{     //sem_close
 152:src/riscv.cpp ****                 sem_t handle;
 153:src/riscv.cpp ****                 __asm__ volatile("mv %[handle], a1":[handle]"=r"(handle));
 154:src/riscv.cpp **** 
 155:src/riscv.cpp ****                 int s=0;
 156:src/riscv.cpp ****                 if (handle == nullptr)
 157:src/riscv.cpp ****                     s = -1;
 158:src/riscv.cpp ****                 else {
 159:src/riscv.cpp ****                     s=handle->semClose();
 160:src/riscv.cpp ****                 }
 161:src/riscv.cpp ****                 __asm__ volatile("mv a0, %[p]"::[p]"r"(s));
 162:src/riscv.cpp ****                 break;
 163:src/riscv.cpp ****             }
 164:src/riscv.cpp ****             case 0x23:{     //sem_wait
 165:src/riscv.cpp ****                 sem_t id;
 166:src/riscv.cpp ****                 __asm__ volatile("mv %[id], a1":[id]"=r"(id));
 167:src/riscv.cpp **** 
 168:src/riscv.cpp ****                 int s=0;
 169:src/riscv.cpp ****                 if (id == nullptr)
 170:src/riscv.cpp ****                     s = -1;
GAS LISTING /tmp/cckEJyLA.s 			page 9


 171:src/riscv.cpp ****                 else {
 172:src/riscv.cpp ****                     s = id->wait();
 173:src/riscv.cpp ****                 }
 174:src/riscv.cpp ****                 __asm__ volatile("mv a0, %[p]"::[p]"r"(s));
 175:src/riscv.cpp ****                 break;
 176:src/riscv.cpp ****             }
 177:src/riscv.cpp ****             case 0x24:{     //sem_signal
 178:src/riscv.cpp ****                 sem_t id;
 179:src/riscv.cpp ****                 __asm__ volatile("mv %[id], a1":[id]"=r"(id));
 180:src/riscv.cpp **** 
 181:src/riscv.cpp ****                 int s=0;
 182:src/riscv.cpp ****                 if (id == nullptr)
 183:src/riscv.cpp ****                     s = -1;
 184:src/riscv.cpp ****                 else {
 185:src/riscv.cpp ****                     s = id->signal();
 186:src/riscv.cpp ****                 }
 187:src/riscv.cpp ****                 __asm__ volatile("mv a0, %[p]"::[p]"r"(s));
 188:src/riscv.cpp ****                 break;
 189:src/riscv.cpp ****             }
 190:src/riscv.cpp ****             case 0x25:{     //sem_try_wait
 191:src/riscv.cpp ****                 sem_t id;
 192:src/riscv.cpp ****                 __asm__ volatile("mv %[id], a1":[id]"=r"(id));
 193:src/riscv.cpp **** 
 194:src/riscv.cpp ****                 int s=0;
 195:src/riscv.cpp ****                 if (id == nullptr)
 196:src/riscv.cpp ****                     s = -1;
 197:src/riscv.cpp ****                 else {
 198:src/riscv.cpp ****                     s = id->try_wait();
 199:src/riscv.cpp ****                 }
 200:src/riscv.cpp ****                 __asm__ volatile("mv a0, %[p]"::[p]"r"(s));
 201:src/riscv.cpp ****                 break;
 202:src/riscv.cpp ****             }
 203:src/riscv.cpp ****             case 0x26:{     //sem_waitPrior
 204:src/riscv.cpp ****                 sem_t handle;
 205:src/riscv.cpp ****                 __asm__ volatile("mv %[handle], a1":[handle]"=r"(handle));
 206:src/riscv.cpp ****                 unsigned id;
 207:src/riscv.cpp ****                 __asm__ volatile("mv %[idT], a2":[idT]"=r"(id));
 208:src/riscv.cpp **** 
 209:src/riscv.cpp ****                 int s=0;
 210:src/riscv.cpp ****                 if (handle == nullptr)
 211:src/riscv.cpp ****                     s = -1;
 212:src/riscv.cpp ****                 else {
 213:src/riscv.cpp ****                     s = handle->wait_prior(id);
 214:src/riscv.cpp ****                 }
 215:src/riscv.cpp ****                 __asm__ volatile("mv a0, %[p]"::[p]"r"(s));
 216:src/riscv.cpp ****                 break;
 217:src/riscv.cpp ****             }
 218:src/riscv.cpp ****             case 0x41: {    //getc
 219:src/riscv.cpp **** 
 220:src/riscv.cpp ****                 char c = __getc();
 221:src/riscv.cpp ****                 __asm__ volatile("mv a0, %[p]"::[p]"r"(c));
 222:src/riscv.cpp ****                 break;
 223:src/riscv.cpp ****             }
 224:src/riscv.cpp ****             case 0x42:{     //putc
 225:src/riscv.cpp ****                 char c;
 226:src/riscv.cpp ****                 __asm__ volatile("mv %[c], a1":[c]"=r"(c));
 227:src/riscv.cpp ****                 __putc(c);
GAS LISTING /tmp/cckEJyLA.s 			page 10


 228:src/riscv.cpp ****                 break;
 229:src/riscv.cpp ****             }
 230:src/riscv.cpp **** 
 231:src/riscv.cpp ****         }
 232:src/riscv.cpp ****         w_sstatus(sstatus);
 233:src/riscv.cpp ****         w_sepc(sepc);   //ono sto se nalazi na steku treba da bude restaurirano
 234:src/riscv.cpp ****     }
 235:src/riscv.cpp ****     else if(scause == 0x8000000000000001UL){
 113              		.loc 1 235 10 is_stmt 1
 114              	.LBB88:
 115              	.LBB47:
 116 0058 9307F0FF 		li	a5,-1
 117 005c 9397F703 		slli	a5,a5,63
 118 0060 93871700 		addi	a5,a5,1
 119 0064 6384F434 		beq	s1,a5,.L51
 120              	.LBE47:
 121              	.LBE88:
 236:src/riscv.cpp ****     // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrupt)
 237:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 238:src/riscv.cpp ****         TCB::timeSliceCounter++;        //odnosi se na running nit
 239:src/riscv.cpp ****     //    if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 240:src/riscv.cpp ****     //    {
 241:src/riscv.cpp ****     //        uint64 volatile sepc = r_sepc();    //povratna adresa iz prekidne rutine
 242:src/riscv.cpp ****     //        uint64 volatile sstatus = r_sstatus();
 243:src/riscv.cpp ****     //        TCB::timeSliceCounter = 0;
 244:src/riscv.cpp ****     //        TCB::dispatch();        //promeni se kontekst
 245:src/riscv.cpp ****     //        w_sstatus(sstatus);     //vrati se statusni registar ranije ucitane niti
 246:src/riscv.cpp ****     //        w_sepc(sepc);           //vratimo ranije ucitanu nit
 247:src/riscv.cpp ****     //    }
 248:src/riscv.cpp ****     }
 249:src/riscv.cpp ****     else if(scause == 0x8000000000000009UL){
 122              		.loc 1 249 10
 123              	.LBB89:
 124              	.LBB55:
 125              	.LBB48:
 126 0068 9307F0FF 		li	a5,-1
 127 006c 9397F703 		slli	a5,a5,63
 128 0070 93879700 		addi	a5,a5,9
 129 0074 638CF434 		beq	s1,a5,.L52
 130              	.LBB49:
 250:src/riscv.cpp ****         console_handler();
 251:src/riscv.cpp ****     }
 252:src/riscv.cpp ****     else
 253:src/riscv.cpp ****     {
 254:src/riscv.cpp ****         // unexpected trap cause
 255:src/riscv.cpp ****         uint64 sepc = r_sepc();     //DODATO
 131              		.loc 1 255 9
 132              	.LBB50:
 133              	.LBB51:
 101:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 134              		.loc 2 101 5
 102:src/../h/riscv.hpp ****     return sepc;
 135              		.loc 2 102 5
 102:src/../h/riscv.hpp ****     return sepc;
 136              		.loc 2 102 64 is_stmt 0
 137              	#APP
 138              	# 102 "src/../h/riscv.hpp" 1
GAS LISTING /tmp/cckEJyLA.s 			page 11


 139              		csrr a5, sepc
 140              	# 0 "" 2
 141              	#NO_APP
 142 007c 233CF4FC 		sd	a5,-40(s0)
 103:src/../h/riscv.hpp **** }
 143              		.loc 2 103 5 is_stmt 1
 103:src/../h/riscv.hpp **** }
 144              		.loc 2 103 12 is_stmt 0
 145 0080 033984FD 		ld	s2,-40(s0)
 146              	.LVL3:
 147              	.LBE51:
 148              	.LBE50:
 256:src/riscv.cpp ****         printString("GRESKA! SCAUSE: ");
 149              		.loc 1 256 9 is_stmt 1
 150              		.loc 1 256 20 is_stmt 0
 151 0084 17050000 		lla	a0,.LC0
 151      13050500 
 152 008c 97000000 		call	_Z11printStringPKc@plt
 152      E7800000 
 153              	.LVL4:
 257:src/riscv.cpp ****         printInt(scause);
 154              		.loc 1 257 9 is_stmt 1
 155              		.loc 1 257 17 is_stmt 0
 156 0094 13060000 		li	a2,0
 157 0098 9305A000 		li	a1,10
 158 009c 1B850400 		sext.w	a0,s1
 159 00a0 97000000 		call	_Z8printIntiii@plt
 159      E7800000 
 160              	.LVL5:
 258:src/riscv.cpp ****         printString(", SEPC: ");
 161              		.loc 1 258 9 is_stmt 1
 162              		.loc 1 258 20 is_stmt 0
 163 00a8 17050000 		lla	a0,.LC1
 163      13050500 
 164 00b0 97000000 		call	_Z11printStringPKc@plt
 164      E7800000 
 165              	.LVL6:
 259:src/riscv.cpp ****         printInt(sepc);
 166              		.loc 1 259 9 is_stmt 1
 167              		.loc 1 259 17 is_stmt 0
 168 00b8 13060000 		li	a2,0
 169 00bc 9305A000 		li	a1,10
 170 00c0 1B050900 		sext.w	a0,s2
 171 00c4 97000000 		call	_Z8printIntiii@plt
 171      E7800000 
 172              	.LVL7:
 260:src/riscv.cpp ****         __putc('\n');
 173              		.loc 1 260 9 is_stmt 1
 174              		.loc 1 260 15 is_stmt 0
 175 00cc 1305A000 		li	a0,10
 176 00d0 97000000 		call	__putc@plt
 176      E7800000 
 177              	.LVL8:
 178              	.L37:
 261:src/riscv.cpp ****         while(true);
 179              		.loc 1 261 9 is_stmt 1 discriminator 1
 180              		.loc 1 261 9 discriminator 1
GAS LISTING /tmp/cckEJyLA.s 			page 12


 181 00d8 6F000000 		j	.L37
 182              	.LVL9:
 183              	.L50:
 184              	.LBE49:
 185              	.LBE48:
 186              	.LBE55:
 187              	.LBB56:
  21:src/riscv.cpp **** 
 188              		.loc 1 21 9
 189              	.LBB57:
 190              	.LBB58:
 101:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 191              		.loc 2 101 5
 102:src/../h/riscv.hpp ****     return sepc;
 192              		.loc 2 102 5
 102:src/../h/riscv.hpp ****     return sepc;
 193              		.loc 2 102 64 is_stmt 0
 194              	#APP
 195              	# 102 "src/../h/riscv.hpp" 1
 196              		csrr a5, sepc
 197              	# 0 "" 2
 198              	#NO_APP
 199 00e0 233CF4FC 		sd	a5,-40(s0)
 103:src/../h/riscv.hpp **** }
 200              		.loc 2 103 5 is_stmt 1
 103:src/../h/riscv.hpp **** }
 201              		.loc 2 103 12 is_stmt 0
 202 00e4 833784FD 		ld	a5,-40(s0)
 203              	.LBE58:
 204              	.LBE57:
  21:src/riscv.cpp **** 
 205              		.loc 1 21 41
 206 00e8 93874700 		addi	a5,a5,4
  21:src/riscv.cpp **** 
 207              		.loc 1 21 43
 208 00ec 233CF4FA 		sd	a5,-72(s0)
  23:src/riscv.cpp ****         size_t op_code;
 209              		.loc 1 23 9 is_stmt 1
 210              	.LBB59:
 211              	.LBB60:
 166:src/../h/riscv.hpp **** 
 167:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 168:src/../h/riscv.hpp **** {
 169:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 212              		.loc 2 169 5
 170:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 213              		.loc 2 170 5
 214              		.loc 2 170 76 is_stmt 0
 215              	#APP
 216              	# 170 "src/../h/riscv.hpp" 1
 171              	    return sstatus;
 217              		csrr a5, sstatus
 218              	# 0 "" 2
 219              	#NO_APP
 220 00f4 2338F4FC 		sd	a5,-48(s0)
 221              		.loc 2 171 5 is_stmt 1
 222              		.loc 2 171 12 is_stmt 0
GAS LISTING /tmp/cckEJyLA.s 			page 13


 223 00f8 833704FD 		ld	a5,-48(s0)
 224              	.LBE60:
 225              	.LBE59:
  23:src/riscv.cpp ****         size_t op_code;
 226              		.loc 1 23 45
 227 00fc 2330F4FC 		sd	a5,-64(s0)
  24:src/riscv.cpp ****         __asm__ volatile("mv %[op], a0":[op]"=r"(op_code));
 228              		.loc 1 24 9 is_stmt 1
  25:src/riscv.cpp **** 
 229              		.loc 1 25 9
  25:src/riscv.cpp **** 
 230              		.loc 1 25 59 is_stmt 0
 231              	#APP
 232              	# 25 "src/riscv.cpp" 1
 233              		mv a5, a0
 234              	# 0 "" 2
 235              	.LVL10:
  28:src/riscv.cpp ****             //mem_alloc op code
 236              		.loc 1 28 9 is_stmt 1
 237              	#NO_APP
 238 0104 13072004 		li	a4,66
 239 0108 636EF704 		bgtu	a5,a4,.L5
 240 010c 93972700 		slli	a5,a5,2
 241              	.LVL11:
 242 0110 17070000 		lla	a4,.L7
 242      13070700 
 243 0118 B387E700 		add	a5,a5,a4
 244 011c 83A70700 		lw	a5,0(a5)
 245 0120 B387E700 		add	a5,a5,a4
 246 0124 67800700 		jr	a5
 247              		.section	.rodata
 248              		.align	2
 249              		.align	2
 250              	.L7:
 251 0000 00000000 		.word	.L5-.L7
 252 0004 00000000 		.word	.L25-.L7
 253 0008 00000000 		.word	.L24-.L7
 254 000c 00000000 		.word	.L5-.L7
 255 0010 00000000 		.word	.L5-.L7
 256 0014 00000000 		.word	.L5-.L7
 257 0018 00000000 		.word	.L5-.L7
 258 001c 00000000 		.word	.L5-.L7
 259 0020 00000000 		.word	.L5-.L7
 260 0024 00000000 		.word	.L5-.L7
 261 0028 00000000 		.word	.L5-.L7
 262 002c 00000000 		.word	.L5-.L7
 263 0030 00000000 		.word	.L5-.L7
 264 0034 00000000 		.word	.L5-.L7
 265 0038 00000000 		.word	.L5-.L7
 266 003c 00000000 		.word	.L5-.L7
 267 0040 00000000 		.word	.L5-.L7
 268 0044 00000000 		.word	.L23-.L7
 269 0048 00000000 		.word	.L22-.L7
 270 004c 00000000 		.word	.L21-.L7
 271 0050 00000000 		.word	.L20-.L7
 272 0054 00000000 		.word	.L19-.L7
 273 0058 00000000 		.word	.L18-.L7
GAS LISTING /tmp/cckEJyLA.s 			page 14


 274 005c 00000000 		.word	.L17-.L7
 275 0060 00000000 		.word	.L16-.L7
 276 0064 00000000 		.word	.L15-.L7
 277 0068 00000000 		.word	.L5-.L7
 278 006c 00000000 		.word	.L5-.L7
 279 0070 00000000 		.word	.L5-.L7
 280 0074 00000000 		.word	.L5-.L7
 281 0078 00000000 		.word	.L5-.L7
 282 007c 00000000 		.word	.L5-.L7
 283 0080 00000000 		.word	.L5-.L7
 284 0084 00000000 		.word	.L14-.L7
 285 0088 00000000 		.word	.L13-.L7
 286 008c 00000000 		.word	.L12-.L7
 287 0090 00000000 		.word	.L11-.L7
 288 0094 00000000 		.word	.L10-.L7
 289 0098 00000000 		.word	.L9-.L7
 290 009c 00000000 		.word	.L5-.L7
 291 00a0 00000000 		.word	.L5-.L7
 292 00a4 00000000 		.word	.L5-.L7
 293 00a8 00000000 		.word	.L5-.L7
 294 00ac 00000000 		.word	.L5-.L7
 295 00b0 00000000 		.word	.L5-.L7
 296 00b4 00000000 		.word	.L5-.L7
 297 00b8 00000000 		.word	.L5-.L7
 298 00bc 00000000 		.word	.L5-.L7
 299 00c0 00000000 		.word	.L5-.L7
 300 00c4 00000000 		.word	.L5-.L7
 301 00c8 00000000 		.word	.L5-.L7
 302 00cc 00000000 		.word	.L5-.L7
 303 00d0 00000000 		.word	.L5-.L7
 304 00d4 00000000 		.word	.L5-.L7
 305 00d8 00000000 		.word	.L5-.L7
 306 00dc 00000000 		.word	.L5-.L7
 307 00e0 00000000 		.word	.L5-.L7
 308 00e4 00000000 		.word	.L5-.L7
 309 00e8 00000000 		.word	.L5-.L7
 310 00ec 00000000 		.word	.L5-.L7
 311 00f0 00000000 		.word	.L5-.L7
 312 00f4 00000000 		.word	.L5-.L7
 313 00f8 00000000 		.word	.L5-.L7
 314 00fc 00000000 		.word	.L5-.L7
 315 0100 00000000 		.word	.L5-.L7
 316 0104 00000000 		.word	.L8-.L7
 317 0108 00000000 		.word	.L6-.L7
 318              		.text
 319              	.L25:
 320              	.LBB61:
 321              	.LBB62:
  30:src/riscv.cpp ****                 size_t size;
 322              		.loc 1 30 13
  30:src/riscv.cpp ****                 size_t size;
 323              		.loc 1 30 23
 324              	.LBB63:
  31:src/riscv.cpp ****                 __asm__ volatile("mv %[size], a1":[size]"=r"(size));
 325              		.loc 1 31 17
  32:src/riscv.cpp ****                 //size_t volatile size1 = MemoryAllocator::transferToNumBlock(size);
 326              		.loc 1 32 17
GAS LISTING /tmp/cckEJyLA.s 			page 15


  32:src/riscv.cpp ****                 //size_t volatile size1 = MemoryAllocator::transferToNumBlock(size);
 327              		.loc 1 32 68 is_stmt 0
 328              	#APP
 329              	# 32 "src/riscv.cpp" 1
 330              		mv s1, a1
 331              	# 0 "" 2
 332              	.LVL12:
  34:src/riscv.cpp ****                 if(TCB::running!= nullptr)
 333              		.loc 1 34 17 is_stmt 1
  34:src/riscv.cpp ****                 if(TCB::running!= nullptr)
 334              		.loc 1 34 43 is_stmt 0
 335              	#NO_APP
 336 012c 13851400 		addi	a0,s1,1
 337 0130 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 337      E7800000 
 338              	.LVL13:
  35:src/riscv.cpp ****                     TCB::running->numOfBlocks+=size;
 339              		.loc 1 35 17 is_stmt 1
  35:src/riscv.cpp ****                     TCB::running->numOfBlocks+=size;
 340              		.loc 1 35 32 is_stmt 0
 341 0138 97070000 		la	a5,_ZN3TCB7runningE
 341      83B70700 
 342 0140 83B70700 		ld	a5,0(a5)
  35:src/riscv.cpp ****                     TCB::running->numOfBlocks+=size;
 343              		.loc 1 35 17
 344 0144 63800702 		beqz	a5,.L5
  36:src/riscv.cpp ****                 break;
 345              		.loc 1 36 21 is_stmt 1
  36:src/riscv.cpp ****                 break;
 346              		.loc 1 36 46 is_stmt 0
 347 0148 03B78704 		ld	a4,72(a5)
 348 014c 33079700 		add	a4,a4,s1
 349 0150 23B4E704 		sd	a4,72(a5)
 350 0154 6F000001 		j	.L5
 351              	.LVL14:
 352              	.L24:
 353              	.LBE63:
  40:src/riscv.cpp ****                 void *pt;
 354              		.loc 1 40 13 is_stmt 1
  40:src/riscv.cpp ****                 void *pt;
 355              		.loc 1 40 23
 356              	.LBB64:
  41:src/riscv.cpp ****                 __asm__ volatile("mv %[ptr], a1":[ptr]"=r"(pt));
 357              		.loc 1 41 17
  42:src/riscv.cpp ****                 MemoryAllocator::mem_free(pt);
 358              		.loc 1 42 17
  42:src/riscv.cpp ****                 MemoryAllocator::mem_free(pt);
 359              		.loc 1 42 64 is_stmt 0
 360              	#APP
 361              	# 42 "src/riscv.cpp" 1
 362              		mv a0, a1
 363              	# 0 "" 2
 364              	.LVL15:
  43:src/riscv.cpp **** 
 365              		.loc 1 43 17 is_stmt 1
  43:src/riscv.cpp **** 
 366              		.loc 1 43 42 is_stmt 0
GAS LISTING /tmp/cckEJyLA.s 			page 16


 367              	#NO_APP
 368 015c 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 368      E7800000 
 369              	.LVL16:
  45:src/riscv.cpp ****             }
 370              		.loc 1 45 17 is_stmt 1
 371              	.L5:
 372              	.LBE64:
 373              	.LBE62:
 374              	.LBE61:
 232:src/riscv.cpp ****         w_sepc(sepc);   //ono sto se nalazi na steku treba da bude restaurirano
 375              		.loc 1 232 9
 232:src/riscv.cpp ****         w_sepc(sepc);   //ono sto se nalazi na steku treba da bude restaurirano
 376              		.loc 1 232 18 is_stmt 0
 377 0164 833704FC 		ld	a5,-64(s0)
 378              	.LVL17:
 379              	.LBB81:
 380              	.LBB82:
 172:src/../h/riscv.hpp **** }
 173:src/../h/riscv.hpp **** 
 174:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 175:src/../h/riscv.hpp **** {
 176:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 381              		.loc 2 176 5 is_stmt 1
 382              		.loc 2 176 77 is_stmt 0
 383              	#APP
 384              	# 176 "src/../h/riscv.hpp" 1
 177              	}
 385              		csrw sstatus, a5
 386              	# 0 "" 2
 387              	.LVL18:
 388              	#NO_APP
 389              	.LBE82:
 390              	.LBE81:
 233:src/riscv.cpp ****     }
 391              		.loc 1 233 9 is_stmt 1
 233:src/riscv.cpp ****     }
 392              		.loc 1 233 15 is_stmt 0
 393 016c 833784FB 		ld	a5,-72(s0)
 394              	.LVL19:
 395              	.LBB83:
 396              	.LBB84:
 108:src/../h/riscv.hpp **** }
 397              		.loc 2 108 5 is_stmt 1
 108:src/../h/riscv.hpp **** }
 398              		.loc 2 108 65 is_stmt 0
 399              	#APP
 400              	# 108 "src/../h/riscv.hpp" 1
 401              		csrw sepc, a5
 402              	# 0 "" 2
 403              	.LVL20:
 404              	#NO_APP
 405              	.L3:
 406              	.LBE84:
 407              	.LBE83:
 408              	.LBE56:
 409              	.LBE89:
GAS LISTING /tmp/cckEJyLA.s 			page 17


 262:src/riscv.cpp ****     }
 263:src/riscv.cpp **** }
 410              		.loc 1 263 1
 411 0174 83308104 		ld	ra,72(sp)
 412              		.cfi_remember_state
 413              		.cfi_restore 1
 414 0178 03340104 		ld	s0,64(sp)
 415              		.cfi_restore 8
 416              		.cfi_def_cfa 2, 80
 417 017c 83348103 		ld	s1,56(sp)
 418              		.cfi_restore 9
 419 0180 03390103 		ld	s2,48(sp)
 420              		.cfi_restore 18
 421 0184 13010105 		addi	sp,sp,80
 422              		.cfi_def_cfa_offset 0
 423 0188 67800000 		jr	ra
 424              	.LVL21:
 425              	.L23:
 426              		.cfi_restore_state
 427              	.LBB90:
 428              	.LBB86:
 429              	.LBB85:
 430              	.LBB80:
  48:src/riscv.cpp ****                 thread_t* handle;
 431              		.loc 1 48 13 is_stmt 1
  48:src/riscv.cpp ****                 thread_t* handle;
 432              		.loc 1 48 23
 433              	.LBB65:
  49:src/riscv.cpp ****                 __asm__ volatile("mv %[handle], a1":[handle]"=r"(handle));
 434              		.loc 1 49 17
  50:src/riscv.cpp ****                 void(*start_routine)(void*);
 435              		.loc 1 50 17
  50:src/riscv.cpp ****                 void(*start_routine)(void*);
 436              		.loc 1 50 74 is_stmt 0
 437              	#APP
 438              	# 50 "src/riscv.cpp" 1
 439              		mv s1, a1
 440              	# 0 "" 2
 441              	.LVL22:
  51:src/riscv.cpp ****                 __asm__ volatile("mv %[body], a2":[body]"=r"(start_routine));
 442              		.loc 1 51 17 is_stmt 1
  52:src/riscv.cpp ****                 void* arg;
 443              		.loc 1 52 17
  52:src/riscv.cpp ****                 void* arg;
 444              		.loc 1 52 77 is_stmt 0
 445              	# 52 "src/riscv.cpp" 1
 446              		mv a0, a2
 447              	# 0 "" 2
 448              	.LVL23:
  53:src/riscv.cpp ****                 __asm__ volatile("mv %[arg], a3":[arg]"=r"(arg));
 449              		.loc 1 53 17 is_stmt 1
  54:src/riscv.cpp ****                 void* stack;
 450              		.loc 1 54 17
  54:src/riscv.cpp ****                 void* stack;
 451              		.loc 1 54 65 is_stmt 0
 452              	# 54 "src/riscv.cpp" 1
 453              		mv a1, a3
GAS LISTING /tmp/cckEJyLA.s 			page 18


 454              	# 0 "" 2
 455              	.LVL24:
  55:src/riscv.cpp ****                 __asm__ volatile("mv %[stack], a6":[stack]"=r"(stack));
 456              		.loc 1 55 17 is_stmt 1
  56:src/riscv.cpp **** 
 457              		.loc 1 56 17
  56:src/riscv.cpp **** 
 458              		.loc 1 56 71 is_stmt 0
 459              	# 56 "src/riscv.cpp" 1
 460              		mv a2, a6
 461              	# 0 "" 2
 462              	.LVL25:
  58:src/riscv.cpp ****                 if (handle == nullptr)
 463              		.loc 1 58 17 is_stmt 1
  59:src/riscv.cpp ****                     s = -1;
 464              		.loc 1 59 17
 465              	#NO_APP
 466 019c 63800402 		beqz	s1,.L38
  62:src/riscv.cpp **** 
 467              		.loc 1 62 21
  62:src/riscv.cpp **** 
 468              		.loc 1 62 48 is_stmt 0
 469 01a0 93060000 		li	a3,0
 470 01a4 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_S0_PS_@plt
 470      E7800000 
 471              	.LVL26:
  62:src/riscv.cpp **** 
 472              		.loc 1 62 29
 473 01ac 23B0A400 		sd	a0,0(s1)
  64:src/riscv.cpp ****                         s=-1;
 474              		.loc 1 64 21 is_stmt 1
 475 01b0 630C0500 		beqz	a0,.L39
  58:src/riscv.cpp ****                 if (handle == nullptr)
 476              		.loc 1 58 21 is_stmt 0
 477 01b4 93070000 		li	a5,0
 478 01b8 6F008000 		j	.L26
 479              	.LVL27:
 480              	.L38:
  60:src/riscv.cpp ****                 else {
 481              		.loc 1 60 23
 482 01bc 9307F0FF 		li	a5,-1
 483              	.LVL28:
 484              	.L26:
  67:src/riscv.cpp ****                 break;
 485              		.loc 1 67 17 is_stmt 1
  67:src/riscv.cpp ****                 break;
 486              		.loc 1 67 59 is_stmt 0
 487              	#APP
 488              	# 67 "src/riscv.cpp" 1
  68:src/riscv.cpp ****             }
 489              		mv a0, a5
 490              	# 0 "" 2
 491              		.loc 1 68 17 is_stmt 1
 492              	#NO_APP
 493 01c4 6FF01FFA 		j	.L5
 494              	.LVL29:
 495              	.L39:
GAS LISTING /tmp/cckEJyLA.s 			page 19


  65:src/riscv.cpp ****                 }
 496              		.loc 1 65 26 is_stmt 0
 497 01c8 9307F0FF 		li	a5,-1
 498 01cc 6FF05FFF 		j	.L26
 499              	.LVL30:
 500              	.L22:
 501              	.LBE65:
  71:src/riscv.cpp ****                 //pozvati thread_exit tipa int
 502              		.loc 1 71 13 is_stmt 1
  71:src/riscv.cpp ****                 //pozvati thread_exit tipa int
 503              		.loc 1 71 23
 504              	.LBB66:
  73:src/riscv.cpp ****                 __asm__ volatile("mv a0, %[p]"::[p]"r"(k));
 505              		.loc 1 73 17
  73:src/riscv.cpp ****                 __asm__ volatile("mv a0, %[p]"::[p]"r"(k));
 506              		.loc 1 73 41 is_stmt 0
 507 01d0 97000000 		call	_ZN3TCB11thread_exitEv@plt
 507      E7800000 
 508              	.LVL31:
  74:src/riscv.cpp ****                 break;
 509              		.loc 1 74 17 is_stmt 1
  74:src/riscv.cpp ****                 break;
 510              		.loc 1 74 59 is_stmt 0
 511              	#APP
 512              	# 74 "src/riscv.cpp" 1
  75:src/riscv.cpp ****             }
 513              		mv a0, a0
 514              	# 0 "" 2
 515              		.loc 1 75 17 is_stmt 1
 516              	#NO_APP
 517 01dc 6FF09FF8 		j	.L5
 518              	.LVL32:
 519              	.L21:
 520              	.LBE66:
  78:src/riscv.cpp ****                 TCB::dispatch();
 521              		.loc 1 78 13
  78:src/riscv.cpp ****                 TCB::dispatch();
 522              		.loc 1 78 23
  79:src/riscv.cpp ****                 break;
 523              		.loc 1 79 17
  79:src/riscv.cpp ****                 break;
 524              		.loc 1 79 30 is_stmt 0
 525 01e0 97000000 		call	_ZN3TCB8dispatchEv@plt
 525      E7800000 
 526              	.LVL33:
  80:src/riscv.cpp ****             }
 527              		.loc 1 80 17 is_stmt 1
 528 01e8 6FF0DFF7 		j	.L5
 529              	.L20:
  82:src/riscv.cpp ****                 thread_t handle;
 530              		.loc 1 82 13
  82:src/riscv.cpp ****                 thread_t handle;
 531              		.loc 1 82 23
 532              	.LBB67:
  83:src/riscv.cpp ****                 __asm__ volatile("mv %[handle], a1":[handle]"=r"(handle));
 533              		.loc 1 83 17
  84:src/riscv.cpp ****                 TCB::thread_join(handle);
GAS LISTING /tmp/cckEJyLA.s 			page 20


 534              		.loc 1 84 17
  84:src/riscv.cpp ****                 TCB::thread_join(handle);
 535              		.loc 1 84 74 is_stmt 0
 536              	#APP
 537              	# 84 "src/riscv.cpp" 1
 538              		mv a0, a1
 539              	# 0 "" 2
 540              	.LVL34:
  85:src/riscv.cpp ****                 break;
 541              		.loc 1 85 17 is_stmt 1
  85:src/riscv.cpp ****                 break;
 542              		.loc 1 85 33 is_stmt 0
 543              	#NO_APP
 544 01f0 97000000 		call	_ZN3TCB11thread_joinEPS_@plt
 544      E7800000 
 545              	.LVL35:
  86:src/riscv.cpp ****             }
 546              		.loc 1 86 17 is_stmt 1
 547 01f8 6FF0DFF6 		j	.L5
 548              	.L19:
 549              	.LBE67:
  88:src/riscv.cpp ****                 thread_t* handle;
 550              		.loc 1 88 13
  88:src/riscv.cpp ****                 thread_t* handle;
 551              		.loc 1 88 23
 552              	.LBB68:
  89:src/riscv.cpp ****                 __asm__ volatile("mv %[handle], a1":[handle]"=r"(handle));
 553              		.loc 1 89 17
  90:src/riscv.cpp ****                 void(*start_routine)(void*);
 554              		.loc 1 90 17
  90:src/riscv.cpp ****                 void(*start_routine)(void*);
 555              		.loc 1 90 74 is_stmt 0
 556              	#APP
 557              	# 90 "src/riscv.cpp" 1
 558              		mv s1, a1
 559              	# 0 "" 2
 560              	.LVL36:
  91:src/riscv.cpp ****                 __asm__ volatile("mv %[body], a2":[body]"=r"(start_routine));
 561              		.loc 1 91 17 is_stmt 1
  92:src/riscv.cpp ****                 void* arg;
 562              		.loc 1 92 17
  92:src/riscv.cpp ****                 void* arg;
 563              		.loc 1 92 77 is_stmt 0
 564              	# 92 "src/riscv.cpp" 1
 565              		mv a0, a2
 566              	# 0 "" 2
 567              	.LVL37:
  93:src/riscv.cpp ****                 __asm__ volatile("mv %[arg], a3":[arg]"=r"(arg));
 568              		.loc 1 93 17 is_stmt 1
  94:src/riscv.cpp ****                 void* stack;
 569              		.loc 1 94 17
  94:src/riscv.cpp ****                 void* stack;
 570              		.loc 1 94 65 is_stmt 0
 571              	# 94 "src/riscv.cpp" 1
 572              		mv a1, a3
 573              	# 0 "" 2
 574              	.LVL38:
GAS LISTING /tmp/cckEJyLA.s 			page 21


  95:src/riscv.cpp ****                 __asm__ volatile("mv %[stack], a6":[stack]"=r"(stack));
 575              		.loc 1 95 17 is_stmt 1
  96:src/riscv.cpp ****                 thread_t* parent;
 576              		.loc 1 96 17
  96:src/riscv.cpp ****                 thread_t* parent;
 577              		.loc 1 96 71 is_stmt 0
 578              	# 96 "src/riscv.cpp" 1
 579              		mv a2, a6
 580              	# 0 "" 2
 581              	.LVL39:
  97:src/riscv.cpp ****                 __asm__ volatile("mv %[pare], a7":[pare]"=r"(parent));
 582              		.loc 1 97 17 is_stmt 1
  98:src/riscv.cpp ****                 int s=0;
 583              		.loc 1 98 17
  98:src/riscv.cpp ****                 int s=0;
 584              		.loc 1 98 70 is_stmt 0
 585              	# 98 "src/riscv.cpp" 1
 586              		mv a5, a7
 587              	# 0 "" 2
 588              	.LVL40:
  99:src/riscv.cpp ****                 if (handle == nullptr)
 589              		.loc 1 99 17 is_stmt 1
 100:src/riscv.cpp ****                     s = -1;
 590              		.loc 1 100 17
 591              	#NO_APP
 592 0210 63800402 		beqz	s1,.L40
 103:src/riscv.cpp **** 
 593              		.loc 1 103 21
 103:src/riscv.cpp **** 
 594              		.loc 1 103 48 is_stmt 0
 595 0214 83B60700 		ld	a3,0(a5)
 596 0218 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_S0_PS_@plt
 596      E7800000 
 597              	.LVL41:
 103:src/riscv.cpp **** 
 598              		.loc 1 103 29
 599 0220 23B0A400 		sd	a0,0(s1)
 105:src/riscv.cpp ****                         s=-1;
 600              		.loc 1 105 21 is_stmt 1
 601 0224 630C0500 		beqz	a0,.L41
  99:src/riscv.cpp ****                 if (handle == nullptr)
 602              		.loc 1 99 21 is_stmt 0
 603 0228 93070000 		li	a5,0
 604 022c 6F008000 		j	.L27
 605              	.LVL42:
 606              	.L40:
 101:src/riscv.cpp ****                 else {
 607              		.loc 1 101 23
 608 0230 9307F0FF 		li	a5,-1
 609              	.LVL43:
 610              	.L27:
 108:src/riscv.cpp ****                 break;
 611              		.loc 1 108 17 is_stmt 1
 108:src/riscv.cpp ****                 break;
 612              		.loc 1 108 59 is_stmt 0
 613              	#APP
 614              	# 108 "src/riscv.cpp" 1
GAS LISTING /tmp/cckEJyLA.s 			page 22


 109:src/riscv.cpp ****             }
 615              		mv a0, a5
 616              	# 0 "" 2
 617              		.loc 1 109 17 is_stmt 1
 618              	#NO_APP
 619 0238 6FF0DFF2 		j	.L5
 620              	.LVL44:
 621              	.L41:
 106:src/riscv.cpp ****                 }
 622              		.loc 1 106 26 is_stmt 0
 623 023c 9307F0FF 		li	a5,-1
 624 0240 6FF05FFF 		j	.L27
 625              	.LVL45:
 626              	.L18:
 627              	.LBE68:
 111:src/riscv.cpp ****                 TCB::setJoin();
 628              		.loc 1 111 13 is_stmt 1
 111:src/riscv.cpp ****                 TCB::setJoin();
 629              		.loc 1 111 23
 112:src/riscv.cpp ****                 break;
 630              		.loc 1 112 17
 112:src/riscv.cpp ****                 break;
 631              		.loc 1 112 29 is_stmt 0
 632 0244 97000000 		call	_ZN3TCB7setJoinEv@plt
 632      E7800000 
 633              	.LVL46:
 113:src/riscv.cpp ****             }
 634              		.loc 1 113 17 is_stmt 1
 635 024c 6FF09FF1 		j	.L5
 636              	.L17:
 115:src/riscv.cpp ****                 //getThreadId
 637              		.loc 1 115 13
 115:src/riscv.cpp ****                 //getThreadId
 638              		.loc 1 115 23
 639              	.LBB69:
 117:src/riscv.cpp ****                 TCB::dispatch();
 640              		.loc 1 117 17
 117:src/riscv.cpp ****                 TCB::dispatch();
 641              		.loc 1 117 41 is_stmt 0
 642 0250 97000000 		call	_ZN3TCB11getThreadIdEv@plt
 642      E7800000 
 643              	.LVL47:
 644 0258 93040500 		mv	s1,a0
 645              	.LVL48:
 118:src/riscv.cpp ****                 __asm__ volatile("mv a0, %[p]"::[p]"r"(q));
 646              		.loc 1 118 17 is_stmt 1
 118:src/riscv.cpp ****                 __asm__ volatile("mv a0, %[p]"::[p]"r"(q));
 647              		.loc 1 118 30 is_stmt 0
 648 025c 97000000 		call	_ZN3TCB8dispatchEv@plt
 648      E7800000 
 649              	.LVL49:
 119:src/riscv.cpp ****                 break;
 650              		.loc 1 119 17 is_stmt 1
 119:src/riscv.cpp ****                 break;
 651              		.loc 1 119 59 is_stmt 0
 652              	#APP
 653              	# 119 "src/riscv.cpp" 1
GAS LISTING /tmp/cckEJyLA.s 			page 23


 120:src/riscv.cpp ****             }
 654              		mv a0, s1
 655              	# 0 "" 2
 656              		.loc 1 120 17 is_stmt 1
 657              	#NO_APP
 658 0268 6FF0DFEF 		j	.L5
 659              	.LVL50:
 660              	.L16:
 661              	.LBE69:
 122:src/riscv.cpp ****                 int num;
 662              		.loc 1 122 13
 122:src/riscv.cpp ****                 int num;
 663              		.loc 1 122 23
 664              	.LBB70:
 123:src/riscv.cpp ****                 __asm__ volatile("mv %[id], a1":[id]"=r"(num));
 665              		.loc 1 123 17
 124:src/riscv.cpp ****                 TCB::setMaximumThreads(num);
 666              		.loc 1 124 17
 124:src/riscv.cpp ****                 TCB::setMaximumThreads(num);
 667              		.loc 1 124 63 is_stmt 0
 668              	#APP
 669              	# 124 "src/riscv.cpp" 1
 670              		mv a0, a1
 671              	# 0 "" 2
 672              	.LVL51:
 125:src/riscv.cpp ****                 break;
 673              		.loc 1 125 17 is_stmt 1
 125:src/riscv.cpp ****                 break;
 674              		.loc 1 125 39 is_stmt 0
 675              	#NO_APP
 676 0270 1B050500 		sext.w	a0,a0
 677 0274 97000000 		call	_ZN3TCB17setMaximumThreadsEi@plt
 677      E7800000 
 678              	.LVL52:
 126:src/riscv.cpp ****             }
 679              		.loc 1 126 17 is_stmt 1
 680 027c 6FF09FEE 		j	.L5
 681              	.L15:
 682              	.LBE70:
 128:src/riscv.cpp ****                 TCB *handle;
 683              		.loc 1 128 13
 128:src/riscv.cpp ****                 TCB *handle;
 684              		.loc 1 128 23
 685              	.LBB71:
 129:src/riscv.cpp ****                 __asm__ volatile("mv %[id], a1":[id]"=r"(handle));
 686              		.loc 1 129 17
 130:src/riscv.cpp ****                 handle->pingFlag=true;
 687              		.loc 1 130 17
 130:src/riscv.cpp ****                 handle->pingFlag=true;
 688              		.loc 1 130 66 is_stmt 0
 689              	#APP
 690              	# 130 "src/riscv.cpp" 1
 691              		mv a5, a1
 692              	# 0 "" 2
 693              	.LVL53:
 131:src/riscv.cpp ****                 break;
 694              		.loc 1 131 17 is_stmt 1
GAS LISTING /tmp/cckEJyLA.s 			page 24


 131:src/riscv.cpp ****                 break;
 695              		.loc 1 131 33 is_stmt 0
 696              	#NO_APP
 697 0284 13071000 		li	a4,1
 698 0288 2388E704 		sb	a4,80(a5)
 132:src/riscv.cpp ****             }
 699              		.loc 1 132 17 is_stmt 1
 700 028c 6FF09FED 		j	.L5
 701              	.LVL54:
 702              	.L14:
 703              	.LBE71:
 134:src/riscv.cpp ****                 sem_t* handle;
 704              		.loc 1 134 13
 134:src/riscv.cpp ****                 sem_t* handle;
 705              		.loc 1 134 23
 706              	.LBB72:
 135:src/riscv.cpp ****                 __asm__ volatile("mv %[handle], a1":[handle]"=r"(handle));
 707              		.loc 1 135 17
 136:src/riscv.cpp ****                 unsigned init;
 708              		.loc 1 136 17
 136:src/riscv.cpp ****                 unsigned init;
 709              		.loc 1 136 74 is_stmt 0
 710              	#APP
 711              	# 136 "src/riscv.cpp" 1
 712              		mv s1, a1
 713              	# 0 "" 2
 714              	.LVL55:
 137:src/riscv.cpp ****                 __asm__ volatile("mv %[init], a2":[init]"=r"(init));
 715              		.loc 1 137 17 is_stmt 1
 138:src/riscv.cpp **** 
 716              		.loc 1 138 17
 138:src/riscv.cpp **** 
 717              		.loc 1 138 68 is_stmt 0
 718              	# 138 "src/riscv.cpp" 1
 719              		mv a0, a2
 720              	# 0 "" 2
 721              	.LVL56:
 140:src/riscv.cpp ****                 if (handle == nullptr)
 722              		.loc 1 140 17 is_stmt 1
 141:src/riscv.cpp ****                     s = -1;
 723              		.loc 1 141 17
 724              	#NO_APP
 725 0298 63800402 		beqz	s1,.L42
 144:src/riscv.cpp ****                     if(*handle==nullptr)
 726              		.loc 1 144 21
 144:src/riscv.cpp ****                     if(*handle==nullptr)
 727              		.loc 1 144 43 is_stmt 0
 728 029c 1B050500 		sext.w	a0,a0
 729 02a0 97000000 		call	_ZN3Sem7semOpenEi@plt
 729      E7800000 
 730              	.LVL57:
 144:src/riscv.cpp ****                     if(*handle==nullptr)
 731              		.loc 1 144 29
 732 02a8 23B0A400 		sd	a0,0(s1)
 145:src/riscv.cpp ****                         s=-1;
 733              		.loc 1 145 21 is_stmt 1
 734 02ac 630C0500 		beqz	a0,.L43
GAS LISTING /tmp/cckEJyLA.s 			page 25


 140:src/riscv.cpp ****                 if (handle == nullptr)
 735              		.loc 1 140 21 is_stmt 0
 736 02b0 93070000 		li	a5,0
 737 02b4 6F008000 		j	.L28
 738              	.LVL58:
 739              	.L42:
 142:src/riscv.cpp ****                 else {
 740              		.loc 1 142 23
 741 02b8 9307F0FF 		li	a5,-1
 742              	.LVL59:
 743              	.L28:
 148:src/riscv.cpp ****                 break;
 744              		.loc 1 148 17 is_stmt 1
 148:src/riscv.cpp ****                 break;
 745              		.loc 1 148 59 is_stmt 0
 746              	#APP
 747              	# 148 "src/riscv.cpp" 1
 149:src/riscv.cpp ****             }
 748              		mv a0, a5
 749              	# 0 "" 2
 750              		.loc 1 149 17 is_stmt 1
 751              	#NO_APP
 752 02c0 6FF05FEA 		j	.L5
 753              	.LVL60:
 754              	.L43:
 146:src/riscv.cpp ****                 }
 755              		.loc 1 146 26 is_stmt 0
 756 02c4 9307F0FF 		li	a5,-1
 757 02c8 6FF05FFF 		j	.L28
 758              	.LVL61:
 759              	.L13:
 760              	.LBE72:
 151:src/riscv.cpp ****                 sem_t handle;
 761              		.loc 1 151 13 is_stmt 1
 151:src/riscv.cpp ****                 sem_t handle;
 762              		.loc 1 151 23
 763              	.LBB73:
 152:src/riscv.cpp ****                 __asm__ volatile("mv %[handle], a1":[handle]"=r"(handle));
 764              		.loc 1 152 17
 153:src/riscv.cpp **** 
 765              		.loc 1 153 17
 153:src/riscv.cpp **** 
 766              		.loc 1 153 74 is_stmt 0
 767              	#APP
 768              	# 153 "src/riscv.cpp" 1
 769              		mv a0, a1
 770              	# 0 "" 2
 771              	.LVL62:
 155:src/riscv.cpp ****                 if (handle == nullptr)
 772              		.loc 1 155 17 is_stmt 1
 156:src/riscv.cpp ****                     s = -1;
 773              		.loc 1 156 17
 774              	#NO_APP
 775 02d0 630C0500 		beqz	a0,.L44
 159:src/riscv.cpp ****                 }
 776              		.loc 1 159 21
 159:src/riscv.cpp ****                 }
GAS LISTING /tmp/cckEJyLA.s 			page 26


 777              		.loc 1 159 39 is_stmt 0
 778 02d4 97000000 		call	_ZN3Sem8semCloseEv@plt
 778      E7800000 
 779              	.LVL63:
 780 02dc 93070500 		mv	a5,a0
 781              	.LVL64:
 782              	.L29:
 161:src/riscv.cpp ****                 break;
 783              		.loc 1 161 17 is_stmt 1
 161:src/riscv.cpp ****                 break;
 784              		.loc 1 161 59 is_stmt 0
 785              	#APP
 786              	# 161 "src/riscv.cpp" 1
 162:src/riscv.cpp ****             }
 787              		mv a0, a5
 788              	# 0 "" 2
 789              		.loc 1 162 17 is_stmt 1
 790              	#NO_APP
 791 02e4 6FF01FE8 		j	.L5
 792              	.LVL65:
 793              	.L44:
 157:src/riscv.cpp ****                 else {
 794              		.loc 1 157 23 is_stmt 0
 795 02e8 9307F0FF 		li	a5,-1
 796 02ec 6FF05FFF 		j	.L29
 797              	.LVL66:
 798              	.L12:
 799              	.LBE73:
 164:src/riscv.cpp ****                 sem_t id;
 800              		.loc 1 164 13 is_stmt 1
 164:src/riscv.cpp ****                 sem_t id;
 801              		.loc 1 164 23
 802              	.LBB74:
 165:src/riscv.cpp ****                 __asm__ volatile("mv %[id], a1":[id]"=r"(id));
 803              		.loc 1 165 17
 166:src/riscv.cpp **** 
 804              		.loc 1 166 17
 166:src/riscv.cpp **** 
 805              		.loc 1 166 62 is_stmt 0
 806              	#APP
 807              	# 166 "src/riscv.cpp" 1
 808              		mv a0, a1
 809              	# 0 "" 2
 810              	.LVL67:
 168:src/riscv.cpp ****                 if (id == nullptr)
 811              		.loc 1 168 17 is_stmt 1
 169:src/riscv.cpp ****                     s = -1;
 812              		.loc 1 169 17
 813              	#NO_APP
 814 02f4 630C0500 		beqz	a0,.L45
 172:src/riscv.cpp ****                 }
 815              		.loc 1 172 21
 172:src/riscv.cpp ****                 }
 816              		.loc 1 172 33 is_stmt 0
 817 02f8 97000000 		call	_ZN3Sem4waitEv@plt
 817      E7800000 
 818              	.LVL68:
GAS LISTING /tmp/cckEJyLA.s 			page 27


 819 0300 93070500 		mv	a5,a0
 820              	.LVL69:
 821              	.L30:
 174:src/riscv.cpp ****                 break;
 822              		.loc 1 174 17 is_stmt 1
 174:src/riscv.cpp ****                 break;
 823              		.loc 1 174 59 is_stmt 0
 824              	#APP
 825              	# 174 "src/riscv.cpp" 1
 175:src/riscv.cpp ****             }
 826              		mv a0, a5
 827              	# 0 "" 2
 828              		.loc 1 175 17 is_stmt 1
 829              	#NO_APP
 830 0308 6FF0DFE5 		j	.L5
 831              	.LVL70:
 832              	.L45:
 170:src/riscv.cpp ****                 else {
 833              		.loc 1 170 23 is_stmt 0
 834 030c 9307F0FF 		li	a5,-1
 835 0310 6FF05FFF 		j	.L30
 836              	.LVL71:
 837              	.L11:
 838              	.LBE74:
 177:src/riscv.cpp ****                 sem_t id;
 839              		.loc 1 177 13 is_stmt 1
 177:src/riscv.cpp ****                 sem_t id;
 840              		.loc 1 177 23
 841              	.LBB75:
 178:src/riscv.cpp ****                 __asm__ volatile("mv %[id], a1":[id]"=r"(id));
 842              		.loc 1 178 17
 179:src/riscv.cpp **** 
 843              		.loc 1 179 17
 179:src/riscv.cpp **** 
 844              		.loc 1 179 62 is_stmt 0
 845              	#APP
 846              	# 179 "src/riscv.cpp" 1
 847              		mv a0, a1
 848              	# 0 "" 2
 849              	.LVL72:
 181:src/riscv.cpp ****                 if (id == nullptr)
 850              		.loc 1 181 17 is_stmt 1
 182:src/riscv.cpp ****                     s = -1;
 851              		.loc 1 182 17
 852              	#NO_APP
 853 0318 630C0500 		beqz	a0,.L46
 185:src/riscv.cpp ****                 }
 854              		.loc 1 185 21
 185:src/riscv.cpp ****                 }
 855              		.loc 1 185 35 is_stmt 0
 856 031c 97000000 		call	_ZN3Sem6signalEv@plt
 856      E7800000 
 857              	.LVL73:
 858 0324 93070500 		mv	a5,a0
 859              	.LVL74:
 860              	.L31:
 187:src/riscv.cpp ****                 break;
GAS LISTING /tmp/cckEJyLA.s 			page 28


 861              		.loc 1 187 17 is_stmt 1
 187:src/riscv.cpp ****                 break;
 862              		.loc 1 187 59 is_stmt 0
 863              	#APP
 864              	# 187 "src/riscv.cpp" 1
 188:src/riscv.cpp ****             }
 865              		mv a0, a5
 866              	# 0 "" 2
 867              		.loc 1 188 17 is_stmt 1
 868              	#NO_APP
 869 032c 6FF09FE3 		j	.L5
 870              	.LVL75:
 871              	.L46:
 183:src/riscv.cpp ****                 else {
 872              		.loc 1 183 23 is_stmt 0
 873 0330 9307F0FF 		li	a5,-1
 874 0334 6FF05FFF 		j	.L31
 875              	.LVL76:
 876              	.L10:
 877              	.LBE75:
 190:src/riscv.cpp ****                 sem_t id;
 878              		.loc 1 190 13 is_stmt 1
 190:src/riscv.cpp ****                 sem_t id;
 879              		.loc 1 190 23
 880              	.LBB76:
 191:src/riscv.cpp ****                 __asm__ volatile("mv %[id], a1":[id]"=r"(id));
 881              		.loc 1 191 17
 192:src/riscv.cpp **** 
 882              		.loc 1 192 17
 192:src/riscv.cpp **** 
 883              		.loc 1 192 62 is_stmt 0
 884              	#APP
 885              	# 192 "src/riscv.cpp" 1
 886              		mv a0, a1
 887              	# 0 "" 2
 888              	.LVL77:
 194:src/riscv.cpp ****                 if (id == nullptr)
 889              		.loc 1 194 17 is_stmt 1
 195:src/riscv.cpp ****                     s = -1;
 890              		.loc 1 195 17
 891              	#NO_APP
 892 033c 630C0500 		beqz	a0,.L47
 198:src/riscv.cpp ****                 }
 893              		.loc 1 198 21
 198:src/riscv.cpp ****                 }
 894              		.loc 1 198 37 is_stmt 0
 895 0340 97000000 		call	_ZN3Sem8try_waitEv@plt
 895      E7800000 
 896              	.LVL78:
 897 0348 93070500 		mv	a5,a0
 898              	.LVL79:
 899              	.L32:
 200:src/riscv.cpp ****                 break;
 900              		.loc 1 200 17 is_stmt 1
 200:src/riscv.cpp ****                 break;
 901              		.loc 1 200 59 is_stmt 0
 902              	#APP
GAS LISTING /tmp/cckEJyLA.s 			page 29


 903              	# 200 "src/riscv.cpp" 1
 201:src/riscv.cpp ****             }
 904              		mv a0, a5
 905              	# 0 "" 2
 906              		.loc 1 201 17 is_stmt 1
 907              	#NO_APP
 908 0350 6FF05FE1 		j	.L5
 909              	.LVL80:
 910              	.L47:
 196:src/riscv.cpp ****                 else {
 911              		.loc 1 196 23 is_stmt 0
 912 0354 9307F0FF 		li	a5,-1
 913 0358 6FF05FFF 		j	.L32
 914              	.LVL81:
 915              	.L9:
 916              	.LBE76:
 203:src/riscv.cpp ****                 sem_t handle;
 917              		.loc 1 203 13 is_stmt 1
 203:src/riscv.cpp ****                 sem_t handle;
 918              		.loc 1 203 23
 919              	.LBB77:
 204:src/riscv.cpp ****                 __asm__ volatile("mv %[handle], a1":[handle]"=r"(handle));
 920              		.loc 1 204 17
 205:src/riscv.cpp ****                 unsigned id;
 921              		.loc 1 205 17
 205:src/riscv.cpp ****                 unsigned id;
 922              		.loc 1 205 74 is_stmt 0
 923              	#APP
 924              	# 205 "src/riscv.cpp" 1
 925              		mv a0, a1
 926              	# 0 "" 2
 927              	.LVL82:
 206:src/riscv.cpp ****                 __asm__ volatile("mv %[idT], a2":[idT]"=r"(id));
 928              		.loc 1 206 17 is_stmt 1
 207:src/riscv.cpp **** 
 929              		.loc 1 207 17
 207:src/riscv.cpp **** 
 930              		.loc 1 207 64 is_stmt 0
 931              	# 207 "src/riscv.cpp" 1
 932              		mv a1, a2
 933              	# 0 "" 2
 934              	.LVL83:
 209:src/riscv.cpp ****                 if (handle == nullptr)
 935              		.loc 1 209 17 is_stmt 1
 210:src/riscv.cpp ****                     s = -1;
 936              		.loc 1 210 17
 937              	#NO_APP
 938 0364 630E0500 		beqz	a0,.L48
 213:src/riscv.cpp ****                 }
 939              		.loc 1 213 21
 213:src/riscv.cpp ****                 }
 940              		.loc 1 213 43 is_stmt 0
 941 0368 9B850500 		sext.w	a1,a1
 942 036c 97000000 		call	_ZN3Sem10wait_priorEi@plt
 942      E7800000 
 943              	.LVL84:
 944 0374 93070500 		mv	a5,a0
GAS LISTING /tmp/cckEJyLA.s 			page 30


 945              	.LVL85:
 946              	.L33:
 215:src/riscv.cpp ****                 break;
 947              		.loc 1 215 17 is_stmt 1
 215:src/riscv.cpp ****                 break;
 948              		.loc 1 215 59 is_stmt 0
 949              	#APP
 950              	# 215 "src/riscv.cpp" 1
 216:src/riscv.cpp ****             }
 951              		mv a0, a5
 952              	# 0 "" 2
 953              		.loc 1 216 17 is_stmt 1
 954              	#NO_APP
 955 037c 6FF09FDE 		j	.L5
 956              	.LVL86:
 957              	.L48:
 211:src/riscv.cpp ****                 else {
 958              		.loc 1 211 23 is_stmt 0
 959 0380 9307F0FF 		li	a5,-1
 960 0384 6FF05FFF 		j	.L33
 961              	.LVL87:
 962              	.L8:
 963              	.LBE77:
 218:src/riscv.cpp **** 
 964              		.loc 1 218 13 is_stmt 1
 218:src/riscv.cpp **** 
 965              		.loc 1 218 24
 966              	.LBB78:
 220:src/riscv.cpp ****                 __asm__ volatile("mv a0, %[p]"::[p]"r"(c));
 967              		.loc 1 220 17
 220:src/riscv.cpp ****                 __asm__ volatile("mv a0, %[p]"::[p]"r"(c));
 968              		.loc 1 220 32 is_stmt 0
 969 0388 97000000 		call	__getc@plt
 969      E7800000 
 970              	.LVL88:
 221:src/riscv.cpp ****                 break;
 971              		.loc 1 221 17 is_stmt 1
 221:src/riscv.cpp ****                 break;
 972              		.loc 1 221 59 is_stmt 0
 973              	#APP
 974              	# 221 "src/riscv.cpp" 1
 222:src/riscv.cpp ****             }
 975              		mv a0, a0
 976              	# 0 "" 2
 977              		.loc 1 222 17 is_stmt 1
 978              	#NO_APP
 979 0394 6FF01FDD 		j	.L5
 980              	.LVL89:
 981              	.L6:
 982              	.LBE78:
 224:src/riscv.cpp ****                 char c;
 983              		.loc 1 224 13
 224:src/riscv.cpp ****                 char c;
 984              		.loc 1 224 23
 985              	.LBB79:
 225:src/riscv.cpp ****                 __asm__ volatile("mv %[c], a1":[c]"=r"(c));
 986              		.loc 1 225 17
GAS LISTING /tmp/cckEJyLA.s 			page 31


 226:src/riscv.cpp ****                 __putc(c);
 987              		.loc 1 226 17
 226:src/riscv.cpp ****                 __putc(c);
 988              		.loc 1 226 59 is_stmt 0
 989              	#APP
 990              	# 226 "src/riscv.cpp" 1
 991              		mv a0, a1
 992              	# 0 "" 2
 993              	.LVL90:
 227:src/riscv.cpp ****                 break;
 994              		.loc 1 227 17 is_stmt 1
 227:src/riscv.cpp ****                 break;
 995              		.loc 1 227 23 is_stmt 0
 996              	#NO_APP
 997 039c 1375F50F 		andi	a0,a0,0xff
 998 03a0 97000000 		call	__putc@plt
 998      E7800000 
 999              	.LVL91:
 228:src/riscv.cpp ****             }
 1000              		.loc 1 228 17 is_stmt 1
 1001 03a8 6FF0DFDB 		j	.L5
 1002              	.L51:
 1003              	.LBE79:
 1004              	.LBE80:
 1005              	.LBE85:
 1006              	.LBE86:
 1007              	.LBB87:
 237:src/riscv.cpp ****         TCB::timeSliceCounter++;        //odnosi se na running nit
 1008              		.loc 1 237 9
 1009              	.LVL92:
 1010              	.LBB52:
 1011              	.LBB53:
 142:src/../h/riscv.hpp **** }
 1012              		.loc 2 142 5
 142:src/../h/riscv.hpp **** }
 1013              		.loc 2 142 64 is_stmt 0
 1014 03ac 93072000 		li	a5,2
 1015              	#APP
 1016              	# 142 "src/../h/riscv.hpp" 1
 1017              		csrc sip, a5
 1018              	# 0 "" 2
 1019              	.LVL93:
 1020              	#NO_APP
 1021              	.LBE53:
 1022              	.LBE52:
 238:src/riscv.cpp ****     //    if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 1023              		.loc 1 238 9 is_stmt 1
 238:src/riscv.cpp ****     //    if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 1024              		.loc 1 238 30 is_stmt 0
 1025 03b4 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 1025      03370700 
 1026 03bc 83370700 		ld	a5,0(a4)
 1027 03c0 93871700 		addi	a5,a5,1
 1028 03c4 2330F700 		sd	a5,0(a4)
 1029 03c8 6FF0DFDA 		j	.L3
 1030              	.L52:
 1031              	.LBB54:
GAS LISTING /tmp/cckEJyLA.s 			page 32


 250:src/riscv.cpp ****     }
 1032              		.loc 1 250 9 is_stmt 1
 250:src/riscv.cpp ****     }
 1033              		.loc 1 250 24 is_stmt 0
 1034 03cc 97000000 		call	console_handler@plt
 1034      E7800000 
 1035              	.LVL94:
 1036 03d4 6FF01FDA 		j	.L3
 1037              	.LBE54:
 1038              	.LBE87:
 1039              	.LBE90:
 1040              		.cfi_endproc
 1041              	.LFE37:
 1043              	.Letext0:
 1044              		.file 3 "src/../h/../lib/hw.h"
 1045              		.file 4 "src/../h/MemoryAllocator.hpp"
 1046              		.file 5 "src/../h/queue.hpp"
 1047              		.file 6 "src/../h/tcb.hpp"
 1048              		.file 7 "src/../h/sem.hpp"
 1049              		.file 8 "src/../h/syscall_c.hpp"
 1050              		.file 9 "src/../lib/console.h"
 1051              		.file 10 "src/../test/printing.hpp"
GAS LISTING /tmp/cckEJyLA.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/cckEJyLA.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/cckEJyLA.s:13     .text:0000000000000000 .L0 
     /tmp/cckEJyLA.s:14     .text:0000000000000000 .L0 
     /tmp/cckEJyLA.s:15     .text:0000000000000004 .L0 
     /tmp/cckEJyLA.s:17     .text:0000000000000008 .L0 
     /tmp/cckEJyLA.s:19     .text:000000000000000c .L0 
     /tmp/cckEJyLA.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:11     .text:000000000000000c .L0 
     /tmp/cckEJyLA.s:32     .text:0000000000000010 .L0 
     /tmp/cckEJyLA.s:33     .text:0000000000000010 .L0 
     /tmp/cckEJyLA.s:34     .text:0000000000000010 .L0 
     /tmp/cckEJyLA.s:44     .text:0000000000000018 .L0 
       src/riscv.cpp:13     .text:0000000000000018 .L0 
     /tmp/cckEJyLA.s:51     .text:000000000000001c .L0 
     /tmp/cckEJyLA.s:52     .text:0000000000000020 .L0 
     /tmp/cckEJyLA.s:53     .text:0000000000000020 .L0 
     /tmp/cckEJyLA.s:55     .text:0000000000000024 .L0 
     /tmp/cckEJyLA.s:57     .text:0000000000000028 .L0 
     /tmp/cckEJyLA.s:71     .text:0000000000000028 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cckEJyLA.s:74     .text:0000000000000028 .L0 
     /tmp/cckEJyLA.s:75     .text:0000000000000028 .L0 
     /tmp/cckEJyLA.s:76     .text:000000000000002c .L0 
     /tmp/cckEJyLA.s:81     .text:000000000000003c .L0 
     /tmp/cckEJyLA.s:82     .text:000000000000003c .L0 
     /tmp/cckEJyLA.s:83     .text:000000000000003c .L0 
     /tmp/cckEJyLA.s:84     .text:000000000000003c .L0 
     /tmp/cckEJyLA.s:86     .text:0000000000000040 .L0 
     /tmp/cckEJyLA.s:90     .text:0000000000000040 .L0 
     /tmp/cckEJyLA.s:91     .text:0000000000000040 .L0 
     /tmp/cckEJyLA.s:92     .text:0000000000000040 .L0 
  src/../h/riscv.hpp:90     .text:0000000000000040 .L0 
     /tmp/cckEJyLA.s:100    .text:0000000000000048 .L0 
     /tmp/cckEJyLA.s:101    .text:0000000000000048 .L0 
     /tmp/cckEJyLA.s:107    .text:000000000000004c .L0 
     /tmp/cckEJyLA.s:108    .text:000000000000004c .L0 
     /tmp/cckEJyLA.s:110    .text:0000000000000050 .L0 
     /tmp/cckEJyLA.s:116    .text:0000000000000058 .L0 
     /tmp/cckEJyLA.s:126    .text:0000000000000068 .L0 
     /tmp/cckEJyLA.s:134    .text:0000000000000078 .L0 
     /tmp/cckEJyLA.s:135    .text:0000000000000078 .L0 
     /tmp/cckEJyLA.s:136    .text:0000000000000078 .L0 
  src/../h/riscv.hpp:102    .text:0000000000000078 .L0 
     /tmp/cckEJyLA.s:144    .text:0000000000000080 .L0 
     /tmp/cckEJyLA.s:145    .text:0000000000000080 .L0 
     /tmp/cckEJyLA.s:150    .text:0000000000000084 .L0 
     /tmp/cckEJyLA.s:151    .text:0000000000000084 .L0 
     /tmp/cckEJyLA.s:155    .text:0000000000000094 .L0 
     /tmp/cckEJyLA.s:156    .text:0000000000000094 .L0 
     /tmp/cckEJyLA.s:162    .text:00000000000000a8 .L0 
     /tmp/cckEJyLA.s:163    .text:00000000000000a8 .L0 
     /tmp/cckEJyLA.s:167    .text:00000000000000b8 .L0 
     /tmp/cckEJyLA.s:168    .text:00000000000000b8 .L0 
     /tmp/cckEJyLA.s:174    .text:00000000000000cc .L0 
     /tmp/cckEJyLA.s:175    .text:00000000000000cc .L0 
     /tmp/cckEJyLA.s:180    .text:00000000000000d8 .L0 
GAS LISTING /tmp/cckEJyLA.s 			page 34


     /tmp/cckEJyLA.s:181    .text:00000000000000d8 .L0 
     /tmp/cckEJyLA.s:191    .text:00000000000000dc .L0 
     /tmp/cckEJyLA.s:192    .text:00000000000000dc .L0 
     /tmp/cckEJyLA.s:193    .text:00000000000000dc .L0 
  src/../h/riscv.hpp:102    .text:00000000000000dc .L0 
     /tmp/cckEJyLA.s:201    .text:00000000000000e4 .L0 
     /tmp/cckEJyLA.s:202    .text:00000000000000e4 .L0 
     /tmp/cckEJyLA.s:206    .text:00000000000000e8 .L0 
     /tmp/cckEJyLA.s:208    .text:00000000000000ec .L0 
     /tmp/cckEJyLA.s:212    .text:00000000000000f0 .L0 
     /tmp/cckEJyLA.s:213    .text:00000000000000f0 .L0 
     /tmp/cckEJyLA.s:214    .text:00000000000000f0 .L0 
  src/../h/riscv.hpp:170    .text:00000000000000f0 .L0 
     /tmp/cckEJyLA.s:222    .text:00000000000000f8 .L0 
     /tmp/cckEJyLA.s:223    .text:00000000000000f8 .L0 
     /tmp/cckEJyLA.s:227    .text:00000000000000fc .L0 
     /tmp/cckEJyLA.s:229    .text:0000000000000100 .L0 
     /tmp/cckEJyLA.s:230    .text:0000000000000100 .L0 
       src/riscv.cpp:25     .text:0000000000000100 .L0 
     /tmp/cckEJyLA.s:238    .text:0000000000000104 .L0 
     /tmp/cckEJyLA.s:323    .text:0000000000000128 .L0 
     /tmp/cckEJyLA.s:325    .text:0000000000000128 .L0 
     /tmp/cckEJyLA.s:326    .text:0000000000000128 .L0 
     /tmp/cckEJyLA.s:327    .text:0000000000000128 .L0 
       src/riscv.cpp:32     .text:0000000000000128 .L0 
     /tmp/cckEJyLA.s:334    .text:000000000000012c .L0 
     /tmp/cckEJyLA.s:336    .text:000000000000012c .L0 
     /tmp/cckEJyLA.s:340    .text:0000000000000138 .L0 
     /tmp/cckEJyLA.s:341    .text:0000000000000138 .L0 
     /tmp/cckEJyLA.s:344    .text:0000000000000144 .L0 
     /tmp/cckEJyLA.s:346    .text:0000000000000148 .L0 
     /tmp/cckEJyLA.s:347    .text:0000000000000148 .L0 
     /tmp/cckEJyLA.s:355    .text:0000000000000158 .L0 
     /tmp/cckEJyLA.s:357    .text:0000000000000158 .L0 
     /tmp/cckEJyLA.s:358    .text:0000000000000158 .L0 
     /tmp/cckEJyLA.s:359    .text:0000000000000158 .L0 
       src/riscv.cpp:42     .text:0000000000000158 .L0 
     /tmp/cckEJyLA.s:366    .text:000000000000015c .L0 
     /tmp/cckEJyLA.s:368    .text:000000000000015c .L0 
     /tmp/cckEJyLA.s:375    .text:0000000000000164 .L0 
     /tmp/cckEJyLA.s:376    .text:0000000000000164 .L0 
     /tmp/cckEJyLA.s:377    .text:0000000000000164 .L0 
     /tmp/cckEJyLA.s:382    .text:0000000000000168 .L0 
  src/../h/riscv.hpp:176    .text:0000000000000168 .L0 
     /tmp/cckEJyLA.s:392    .text:000000000000016c .L0 
     /tmp/cckEJyLA.s:393    .text:000000000000016c .L0 
     /tmp/cckEJyLA.s:398    .text:0000000000000170 .L0 
  src/../h/riscv.hpp:108    .text:0000000000000170 .L0 
     /tmp/cckEJyLA.s:411    .text:0000000000000174 .L0 
     /tmp/cckEJyLA.s:412    .text:0000000000000178 .L0 
     /tmp/cckEJyLA.s:413    .text:0000000000000178 .L0 
     /tmp/cckEJyLA.s:415    .text:000000000000017c .L0 
     /tmp/cckEJyLA.s:416    .text:000000000000017c .L0 
     /tmp/cckEJyLA.s:418    .text:0000000000000180 .L0 
     /tmp/cckEJyLA.s:420    .text:0000000000000184 .L0 
     /tmp/cckEJyLA.s:422    .text:0000000000000188 .L0 
     /tmp/cckEJyLA.s:426    .text:000000000000018c .L0 
GAS LISTING /tmp/cckEJyLA.s 			page 35


     /tmp/cckEJyLA.s:432    .text:000000000000018c .L0 
     /tmp/cckEJyLA.s:434    .text:000000000000018c .L0 
     /tmp/cckEJyLA.s:435    .text:000000000000018c .L0 
     /tmp/cckEJyLA.s:436    .text:000000000000018c .L0 
       src/riscv.cpp:50     .text:000000000000018c .L0 
     /tmp/cckEJyLA.s:443    .text:0000000000000190 .L0 
     /tmp/cckEJyLA.s:444    .text:0000000000000190 .L0 
       src/riscv.cpp:52     .text:0000000000000190 .L0 
     /tmp/cckEJyLA.s:450    .text:0000000000000194 .L0 
     /tmp/cckEJyLA.s:451    .text:0000000000000194 .L0 
       src/riscv.cpp:54     .text:0000000000000194 .L0 
     /tmp/cckEJyLA.s:457    .text:0000000000000198 .L0 
     /tmp/cckEJyLA.s:458    .text:0000000000000198 .L0 
       src/riscv.cpp:56     .text:0000000000000198 .L0 
     /tmp/cckEJyLA.s:464    .text:000000000000019c .L0 
     /tmp/cckEJyLA.s:466    .text:000000000000019c .L0 
     /tmp/cckEJyLA.s:468    .text:00000000000001a0 .L0 
     /tmp/cckEJyLA.s:469    .text:00000000000001a0 .L0 
     /tmp/cckEJyLA.s:473    .text:00000000000001ac .L0 
     /tmp/cckEJyLA.s:475    .text:00000000000001b0 .L0 
     /tmp/cckEJyLA.s:477    .text:00000000000001b4 .L0 
     /tmp/cckEJyLA.s:482    .text:00000000000001bc .L0 
     /tmp/cckEJyLA.s:486    .text:00000000000001c0 .L0 
       src/riscv.cpp:67     .text:00000000000001c0 .L0 
     /tmp/cckEJyLA.s:493    .text:00000000000001c4 .L0 
     /tmp/cckEJyLA.s:497    .text:00000000000001c8 .L0 
     /tmp/cckEJyLA.s:503    .text:00000000000001d0 .L0 
     /tmp/cckEJyLA.s:505    .text:00000000000001d0 .L0 
     /tmp/cckEJyLA.s:506    .text:00000000000001d0 .L0 
     /tmp/cckEJyLA.s:507    .text:00000000000001d0 .L0 
     /tmp/cckEJyLA.s:510    .text:00000000000001d8 .L0 
       src/riscv.cpp:74     .text:00000000000001d8 .L0 
     /tmp/cckEJyLA.s:517    .text:00000000000001dc .L0 
     /tmp/cckEJyLA.s:522    .text:00000000000001e0 .L0 
     /tmp/cckEJyLA.s:523    .text:00000000000001e0 .L0 
     /tmp/cckEJyLA.s:524    .text:00000000000001e0 .L0 
     /tmp/cckEJyLA.s:525    .text:00000000000001e0 .L0 
     /tmp/cckEJyLA.s:528    .text:00000000000001e8 .L0 
     /tmp/cckEJyLA.s:531    .text:00000000000001ec .L0 
     /tmp/cckEJyLA.s:533    .text:00000000000001ec .L0 
     /tmp/cckEJyLA.s:534    .text:00000000000001ec .L0 
     /tmp/cckEJyLA.s:535    .text:00000000000001ec .L0 
       src/riscv.cpp:84     .text:00000000000001ec .L0 
     /tmp/cckEJyLA.s:542    .text:00000000000001f0 .L0 
     /tmp/cckEJyLA.s:544    .text:00000000000001f0 .L0 
     /tmp/cckEJyLA.s:547    .text:00000000000001f8 .L0 
     /tmp/cckEJyLA.s:551    .text:00000000000001fc .L0 
     /tmp/cckEJyLA.s:553    .text:00000000000001fc .L0 
     /tmp/cckEJyLA.s:554    .text:00000000000001fc .L0 
     /tmp/cckEJyLA.s:555    .text:00000000000001fc .L0 
       src/riscv.cpp:90     .text:00000000000001fc .L0 
     /tmp/cckEJyLA.s:562    .text:0000000000000200 .L0 
     /tmp/cckEJyLA.s:563    .text:0000000000000200 .L0 
       src/riscv.cpp:92     .text:0000000000000200 .L0 
     /tmp/cckEJyLA.s:569    .text:0000000000000204 .L0 
     /tmp/cckEJyLA.s:570    .text:0000000000000204 .L0 
       src/riscv.cpp:94     .text:0000000000000204 .L0 
GAS LISTING /tmp/cckEJyLA.s 			page 36


     /tmp/cckEJyLA.s:576    .text:0000000000000208 .L0 
     /tmp/cckEJyLA.s:577    .text:0000000000000208 .L0 
       src/riscv.cpp:96     .text:0000000000000208 .L0 
     /tmp/cckEJyLA.s:583    .text:000000000000020c .L0 
     /tmp/cckEJyLA.s:584    .text:000000000000020c .L0 
       src/riscv.cpp:98     .text:000000000000020c .L0 
     /tmp/cckEJyLA.s:590    .text:0000000000000210 .L0 
     /tmp/cckEJyLA.s:592    .text:0000000000000210 .L0 
     /tmp/cckEJyLA.s:594    .text:0000000000000214 .L0 
     /tmp/cckEJyLA.s:595    .text:0000000000000214 .L0 
     /tmp/cckEJyLA.s:599    .text:0000000000000220 .L0 
     /tmp/cckEJyLA.s:601    .text:0000000000000224 .L0 
     /tmp/cckEJyLA.s:603    .text:0000000000000228 .L0 
     /tmp/cckEJyLA.s:608    .text:0000000000000230 .L0 
     /tmp/cckEJyLA.s:612    .text:0000000000000234 .L0 
       src/riscv.cpp:108    .text:0000000000000234 .L0 
     /tmp/cckEJyLA.s:619    .text:0000000000000238 .L0 
     /tmp/cckEJyLA.s:623    .text:000000000000023c .L0 
     /tmp/cckEJyLA.s:629    .text:0000000000000244 .L0 
     /tmp/cckEJyLA.s:630    .text:0000000000000244 .L0 
     /tmp/cckEJyLA.s:631    .text:0000000000000244 .L0 
     /tmp/cckEJyLA.s:632    .text:0000000000000244 .L0 
     /tmp/cckEJyLA.s:635    .text:000000000000024c .L0 
     /tmp/cckEJyLA.s:638    .text:0000000000000250 .L0 
     /tmp/cckEJyLA.s:640    .text:0000000000000250 .L0 
     /tmp/cckEJyLA.s:641    .text:0000000000000250 .L0 
     /tmp/cckEJyLA.s:642    .text:0000000000000250 .L0 
     /tmp/cckEJyLA.s:647    .text:000000000000025c .L0 
     /tmp/cckEJyLA.s:648    .text:000000000000025c .L0 
     /tmp/cckEJyLA.s:651    .text:0000000000000264 .L0 
       src/riscv.cpp:119    .text:0000000000000264 .L0 
     /tmp/cckEJyLA.s:658    .text:0000000000000268 .L0 
     /tmp/cckEJyLA.s:663    .text:000000000000026c .L0 
     /tmp/cckEJyLA.s:665    .text:000000000000026c .L0 
     /tmp/cckEJyLA.s:666    .text:000000000000026c .L0 
     /tmp/cckEJyLA.s:667    .text:000000000000026c .L0 
       src/riscv.cpp:124    .text:000000000000026c .L0 
     /tmp/cckEJyLA.s:674    .text:0000000000000270 .L0 
     /tmp/cckEJyLA.s:676    .text:0000000000000270 .L0 
     /tmp/cckEJyLA.s:680    .text:000000000000027c .L0 
     /tmp/cckEJyLA.s:684    .text:0000000000000280 .L0 
     /tmp/cckEJyLA.s:686    .text:0000000000000280 .L0 
     /tmp/cckEJyLA.s:687    .text:0000000000000280 .L0 
     /tmp/cckEJyLA.s:688    .text:0000000000000280 .L0 
       src/riscv.cpp:130    .text:0000000000000280 .L0 
     /tmp/cckEJyLA.s:695    .text:0000000000000284 .L0 
     /tmp/cckEJyLA.s:697    .text:0000000000000284 .L0 
     /tmp/cckEJyLA.s:700    .text:000000000000028c .L0 
     /tmp/cckEJyLA.s:705    .text:0000000000000290 .L0 
     /tmp/cckEJyLA.s:707    .text:0000000000000290 .L0 
     /tmp/cckEJyLA.s:708    .text:0000000000000290 .L0 
     /tmp/cckEJyLA.s:709    .text:0000000000000290 .L0 
       src/riscv.cpp:136    .text:0000000000000290 .L0 
     /tmp/cckEJyLA.s:716    .text:0000000000000294 .L0 
     /tmp/cckEJyLA.s:717    .text:0000000000000294 .L0 
       src/riscv.cpp:138    .text:0000000000000294 .L0 
     /tmp/cckEJyLA.s:723    .text:0000000000000298 .L0 
GAS LISTING /tmp/cckEJyLA.s 			page 37


     /tmp/cckEJyLA.s:725    .text:0000000000000298 .L0 
     /tmp/cckEJyLA.s:727    .text:000000000000029c .L0 
     /tmp/cckEJyLA.s:728    .text:000000000000029c .L0 
     /tmp/cckEJyLA.s:732    .text:00000000000002a8 .L0 
     /tmp/cckEJyLA.s:734    .text:00000000000002ac .L0 
     /tmp/cckEJyLA.s:736    .text:00000000000002b0 .L0 
     /tmp/cckEJyLA.s:741    .text:00000000000002b8 .L0 
     /tmp/cckEJyLA.s:745    .text:00000000000002bc .L0 
       src/riscv.cpp:148    .text:00000000000002bc .L0 
     /tmp/cckEJyLA.s:752    .text:00000000000002c0 .L0 
     /tmp/cckEJyLA.s:756    .text:00000000000002c4 .L0 
     /tmp/cckEJyLA.s:762    .text:00000000000002cc .L0 
     /tmp/cckEJyLA.s:764    .text:00000000000002cc .L0 
     /tmp/cckEJyLA.s:765    .text:00000000000002cc .L0 
     /tmp/cckEJyLA.s:766    .text:00000000000002cc .L0 
       src/riscv.cpp:153    .text:00000000000002cc .L0 
     /tmp/cckEJyLA.s:773    .text:00000000000002d0 .L0 
     /tmp/cckEJyLA.s:775    .text:00000000000002d0 .L0 
     /tmp/cckEJyLA.s:777    .text:00000000000002d4 .L0 
     /tmp/cckEJyLA.s:778    .text:00000000000002d4 .L0 
     /tmp/cckEJyLA.s:784    .text:00000000000002e0 .L0 
       src/riscv.cpp:161    .text:00000000000002e0 .L0 
     /tmp/cckEJyLA.s:791    .text:00000000000002e4 .L0 
     /tmp/cckEJyLA.s:795    .text:00000000000002e8 .L0 
     /tmp/cckEJyLA.s:801    .text:00000000000002f0 .L0 
     /tmp/cckEJyLA.s:803    .text:00000000000002f0 .L0 
     /tmp/cckEJyLA.s:804    .text:00000000000002f0 .L0 
     /tmp/cckEJyLA.s:805    .text:00000000000002f0 .L0 
       src/riscv.cpp:166    .text:00000000000002f0 .L0 
     /tmp/cckEJyLA.s:812    .text:00000000000002f4 .L0 
     /tmp/cckEJyLA.s:814    .text:00000000000002f4 .L0 
     /tmp/cckEJyLA.s:816    .text:00000000000002f8 .L0 
     /tmp/cckEJyLA.s:817    .text:00000000000002f8 .L0 
     /tmp/cckEJyLA.s:823    .text:0000000000000304 .L0 
       src/riscv.cpp:174    .text:0000000000000304 .L0 
     /tmp/cckEJyLA.s:830    .text:0000000000000308 .L0 
     /tmp/cckEJyLA.s:834    .text:000000000000030c .L0 
     /tmp/cckEJyLA.s:840    .text:0000000000000314 .L0 
     /tmp/cckEJyLA.s:842    .text:0000000000000314 .L0 
     /tmp/cckEJyLA.s:843    .text:0000000000000314 .L0 
     /tmp/cckEJyLA.s:844    .text:0000000000000314 .L0 
       src/riscv.cpp:179    .text:0000000000000314 .L0 
     /tmp/cckEJyLA.s:851    .text:0000000000000318 .L0 
     /tmp/cckEJyLA.s:853    .text:0000000000000318 .L0 
     /tmp/cckEJyLA.s:855    .text:000000000000031c .L0 
     /tmp/cckEJyLA.s:856    .text:000000000000031c .L0 
     /tmp/cckEJyLA.s:862    .text:0000000000000328 .L0 
       src/riscv.cpp:187    .text:0000000000000328 .L0 
     /tmp/cckEJyLA.s:869    .text:000000000000032c .L0 
     /tmp/cckEJyLA.s:873    .text:0000000000000330 .L0 
     /tmp/cckEJyLA.s:879    .text:0000000000000338 .L0 
     /tmp/cckEJyLA.s:881    .text:0000000000000338 .L0 
     /tmp/cckEJyLA.s:882    .text:0000000000000338 .L0 
     /tmp/cckEJyLA.s:883    .text:0000000000000338 .L0 
       src/riscv.cpp:192    .text:0000000000000338 .L0 
     /tmp/cckEJyLA.s:890    .text:000000000000033c .L0 
     /tmp/cckEJyLA.s:892    .text:000000000000033c .L0 
GAS LISTING /tmp/cckEJyLA.s 			page 38


     /tmp/cckEJyLA.s:894    .text:0000000000000340 .L0 
     /tmp/cckEJyLA.s:895    .text:0000000000000340 .L0 
     /tmp/cckEJyLA.s:901    .text:000000000000034c .L0 
       src/riscv.cpp:200    .text:000000000000034c .L0 
     /tmp/cckEJyLA.s:908    .text:0000000000000350 .L0 
     /tmp/cckEJyLA.s:912    .text:0000000000000354 .L0 
     /tmp/cckEJyLA.s:918    .text:000000000000035c .L0 
     /tmp/cckEJyLA.s:920    .text:000000000000035c .L0 
     /tmp/cckEJyLA.s:921    .text:000000000000035c .L0 
     /tmp/cckEJyLA.s:922    .text:000000000000035c .L0 
       src/riscv.cpp:205    .text:000000000000035c .L0 
     /tmp/cckEJyLA.s:929    .text:0000000000000360 .L0 
     /tmp/cckEJyLA.s:930    .text:0000000000000360 .L0 
       src/riscv.cpp:207    .text:0000000000000360 .L0 
     /tmp/cckEJyLA.s:936    .text:0000000000000364 .L0 
     /tmp/cckEJyLA.s:938    .text:0000000000000364 .L0 
     /tmp/cckEJyLA.s:940    .text:0000000000000368 .L0 
     /tmp/cckEJyLA.s:941    .text:0000000000000368 .L0 
     /tmp/cckEJyLA.s:948    .text:0000000000000378 .L0 
       src/riscv.cpp:215    .text:0000000000000378 .L0 
     /tmp/cckEJyLA.s:955    .text:000000000000037c .L0 
     /tmp/cckEJyLA.s:959    .text:0000000000000380 .L0 
     /tmp/cckEJyLA.s:965    .text:0000000000000388 .L0 
     /tmp/cckEJyLA.s:967    .text:0000000000000388 .L0 
     /tmp/cckEJyLA.s:968    .text:0000000000000388 .L0 
     /tmp/cckEJyLA.s:969    .text:0000000000000388 .L0 
     /tmp/cckEJyLA.s:972    .text:0000000000000390 .L0 
       src/riscv.cpp:221    .text:0000000000000390 .L0 
     /tmp/cckEJyLA.s:979    .text:0000000000000394 .L0 
     /tmp/cckEJyLA.s:984    .text:0000000000000398 .L0 
     /tmp/cckEJyLA.s:986    .text:0000000000000398 .L0 
     /tmp/cckEJyLA.s:987    .text:0000000000000398 .L0 
     /tmp/cckEJyLA.s:988    .text:0000000000000398 .L0 
       src/riscv.cpp:226    .text:0000000000000398 .L0 
     /tmp/cckEJyLA.s:995    .text:000000000000039c .L0 
     /tmp/cckEJyLA.s:997    .text:000000000000039c .L0 
     /tmp/cckEJyLA.s:1001   .text:00000000000003a8 .L0 
     /tmp/cckEJyLA.s:1012   .text:00000000000003ac .L0 
     /tmp/cckEJyLA.s:1013   .text:00000000000003ac .L0 
     /tmp/cckEJyLA.s:1014   .text:00000000000003ac .L0 
     /tmp/cckEJyLA.s:1024   .text:00000000000003b4 .L0 
     /tmp/cckEJyLA.s:1025   .text:00000000000003b4 .L0 
     /tmp/cckEJyLA.s:1033   .text:00000000000003cc .L0 
     /tmp/cckEJyLA.s:1034   .text:00000000000003cc .L0 
     /tmp/cckEJyLA.s:1040   .text:00000000000003d8 .L0 
     /tmp/cckEJyLA.s:1052   .text:00000000000003d8 .L0 
     /tmp/cckEJyLA.s:62     .rodata.str1.8:0000000000000000 .LC0
     /tmp/cckEJyLA.s:151    .text:0000000000000084 .L0 
     /tmp/cckEJyLA.s:65     .rodata.str1.8:0000000000000018 .LC1
     /tmp/cckEJyLA.s:163    .text:00000000000000a8 .L0 
     /tmp/cckEJyLA.s:250    .rodata:0000000000000000 .L7
     /tmp/cckEJyLA.s:242    .text:0000000000000110 .L0 
     /tmp/cckEJyLA.s:341    .text:0000000000000138 .L0 
     /tmp/cckEJyLA.s:1025   .text:00000000000003b4 .L0 
     /tmp/cckEJyLA.s:183    .text:00000000000000dc .L50
     /tmp/cckEJyLA.s:1002   .text:00000000000003ac .L51
     /tmp/cckEJyLA.s:1030   .text:00000000000003cc .L52
GAS LISTING /tmp/cckEJyLA.s 			page 39


     /tmp/cckEJyLA.s:178    .text:00000000000000d8 .L37
     /tmp/cckEJyLA.s:371    .text:0000000000000164 .L5
     /tmp/cckEJyLA.s:480    .text:00000000000001bc .L38
     /tmp/cckEJyLA.s:495    .text:00000000000001c8 .L39
     /tmp/cckEJyLA.s:484    .text:00000000000001c0 .L26
     /tmp/cckEJyLA.s:606    .text:0000000000000230 .L40
     /tmp/cckEJyLA.s:621    .text:000000000000023c .L41
     /tmp/cckEJyLA.s:610    .text:0000000000000234 .L27
     /tmp/cckEJyLA.s:739    .text:00000000000002b8 .L42
     /tmp/cckEJyLA.s:754    .text:00000000000002c4 .L43
     /tmp/cckEJyLA.s:743    .text:00000000000002bc .L28
     /tmp/cckEJyLA.s:793    .text:00000000000002e8 .L44
     /tmp/cckEJyLA.s:782    .text:00000000000002e0 .L29
     /tmp/cckEJyLA.s:832    .text:000000000000030c .L45
     /tmp/cckEJyLA.s:821    .text:0000000000000304 .L30
     /tmp/cckEJyLA.s:871    .text:0000000000000330 .L46
     /tmp/cckEJyLA.s:860    .text:0000000000000328 .L31
     /tmp/cckEJyLA.s:910    .text:0000000000000354 .L47
     /tmp/cckEJyLA.s:899    .text:000000000000034c .L32
     /tmp/cckEJyLA.s:957    .text:0000000000000380 .L48
     /tmp/cckEJyLA.s:946    .text:0000000000000378 .L33
     /tmp/cckEJyLA.s:405    .text:0000000000000174 .L3
     /tmp/cckEJyLA.s:319    .text:0000000000000128 .L25
     /tmp/cckEJyLA.s:352    .text:0000000000000158 .L24
     /tmp/cckEJyLA.s:425    .text:000000000000018c .L23
     /tmp/cckEJyLA.s:500    .text:00000000000001d0 .L22
     /tmp/cckEJyLA.s:519    .text:00000000000001e0 .L21
     /tmp/cckEJyLA.s:529    .text:00000000000001ec .L20
     /tmp/cckEJyLA.s:548    .text:00000000000001fc .L19
     /tmp/cckEJyLA.s:626    .text:0000000000000244 .L18
     /tmp/cckEJyLA.s:636    .text:0000000000000250 .L17
     /tmp/cckEJyLA.s:660    .text:000000000000026c .L16
     /tmp/cckEJyLA.s:681    .text:0000000000000280 .L15
     /tmp/cckEJyLA.s:702    .text:0000000000000290 .L14
     /tmp/cckEJyLA.s:759    .text:00000000000002cc .L13
     /tmp/cckEJyLA.s:798    .text:00000000000002f0 .L12
     /tmp/cckEJyLA.s:837    .text:0000000000000314 .L11
     /tmp/cckEJyLA.s:876    .text:0000000000000338 .L10
     /tmp/cckEJyLA.s:915    .text:000000000000035c .L9
     /tmp/cckEJyLA.s:962    .text:0000000000000388 .L8
     /tmp/cckEJyLA.s:981    .text:0000000000000398 .L6
     /tmp/cckEJyLA.s:3007   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cckEJyLA.s:4718   .debug_str:000000000000084a .LASF182
     /tmp/cckEJyLA.s:4770   .debug_str:0000000000000a72 .LASF183
     /tmp/cckEJyLA.s:4642   .debug_str:0000000000000657 .LASF184
     /tmp/cckEJyLA.s:5      .text:0000000000000000 .Ltext0
     /tmp/cckEJyLA.s:1043   .text:00000000000003d8 .Letext0
     /tmp/cckEJyLA.s:4418   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cckEJyLA.s:4540   .debug_str:000000000000036a .LASF0
     /tmp/cckEJyLA.s:4566   .debug_str:0000000000000430 .LASF1
     /tmp/cckEJyLA.s:4656   .debug_str:00000000000006b5 .LASF2
     /tmp/cckEJyLA.s:4666   .debug_str:00000000000006f5 .LASF4
     /tmp/cckEJyLA.s:4548   .debug_str:000000000000039e .LASF3
     /tmp/cckEJyLA.s:4430   .debug_str:0000000000000057 .LASF5
     /tmp/cckEJyLA.s:4616   .debug_str:000000000000059b .LASF6
     /tmp/cckEJyLA.s:4554   .debug_str:00000000000003db .LASF7
     /tmp/cckEJyLA.s:4512   .debug_str:000000000000029c .LASF8
GAS LISTING /tmp/cckEJyLA.s 			page 40


     /tmp/cckEJyLA.s:4526   .debug_str:0000000000000314 .LASF9
     /tmp/cckEJyLA.s:4458   .debug_str:000000000000011a .LASF10
     /tmp/cckEJyLA.s:4510   .debug_str:000000000000028d .LASF11
     /tmp/cckEJyLA.s:4470   .debug_str:0000000000000165 .LASF12
     /tmp/cckEJyLA.s:4456   .debug_str:000000000000010a .LASF13
     /tmp/cckEJyLA.s:4700   .debug_str:00000000000007ed .LASF14
     /tmp/cckEJyLA.s:4492   .debug_str:00000000000001e7 .LASF15
     /tmp/cckEJyLA.s:4688   .debug_str:0000000000000774 .LASF16
     /tmp/cckEJyLA.s:4756   .debug_str:0000000000000a20 .LASF68
     /tmp/cckEJyLA.s:4638   .debug_str:000000000000063f .LASF20
     /tmp/cckEJyLA.s:4570   .debug_str:000000000000044b .LASF17
     /tmp/cckEJyLA.s:4496   .debug_str:0000000000000218 .LASF18
     /tmp/cckEJyLA.s:4772   .debug_str:0000000000000a80 .LASF19
     /tmp/cckEJyLA.s:4746   .debug_str:00000000000009f2 .LASF21
     /tmp/cckEJyLA.s:4500   .debug_str:000000000000023e .LASF22
     /tmp/cckEJyLA.s:4716   .debug_str:000000000000083d .LASF23
     /tmp/cckEJyLA.s:4476   .debug_str:0000000000000195 .LASF24
     /tmp/cckEJyLA.s:4528   .debug_str:0000000000000322 .LASF25
     /tmp/cckEJyLA.s:4536   .debug_str:000000000000034c .LASF27
     /tmp/cckEJyLA.s:4674   .debug_str:000000000000071b .LASF26
     /tmp/cckEJyLA.s:4494   .debug_str:00000000000001fd .LASF28
     /tmp/cckEJyLA.s:4542   .debug_str:0000000000000377 .LASF29
     /tmp/cckEJyLA.s:4766   .debug_str:0000000000000a50 .LASF30
     /tmp/cckEJyLA.s:4740   .debug_str:00000000000009c6 .LASF31
     /tmp/cckEJyLA.s:4734   .debug_str:000000000000098b .LASF33
     /tmp/cckEJyLA.s:4652   .debug_str:00000000000006a1 .LASF35
     /tmp/cckEJyLA.s:4606   .debug_str:0000000000000550 .LASF37
     /tmp/cckEJyLA.s:4630   .debug_str:000000000000060c .LASF32
     /tmp/cckEJyLA.s:4634   .debug_str:0000000000000618 .LASF34
     /tmp/cckEJyLA.s:4598   .debug_str:000000000000051d .LASF36
     /tmp/cckEJyLA.s:4556   .debug_str:00000000000003ee .LASF38
     /tmp/cckEJyLA.s:4768   .debug_str:0000000000000a6a .LASF39
     /tmp/cckEJyLA.s:4724   .debug_str:0000000000000925 .LASF40
     /tmp/cckEJyLA.s:4596   .debug_str:0000000000000515 .LASF41
     /tmp/cckEJyLA.s:4604   .debug_str:000000000000053c .LASF42
     /tmp/cckEJyLA.s:4574   .debug_str:000000000000046d .LASF43
     /tmp/cckEJyLA.s:4636   .debug_str:000000000000062b .LASF44
     /tmp/cckEJyLA.s:4794   .debug_str:0000000000000b37 .LASF45
     /tmp/cckEJyLA.s:4546   .debug_str:000000000000038a .LASF46
     /tmp/cckEJyLA.s:4696   .debug_str:00000000000007d9 .LASF47
     /tmp/cckEJyLA.s:4670   .debug_str:0000000000000701 .LASF48
     /tmp/cckEJyLA.s:4672   .debug_str:0000000000000714 .LASF49
     /tmp/cckEJyLA.s:4462   .debug_str:000000000000012e .LASF50
     /tmp/cckEJyLA.s:4488   .debug_str:00000000000001d0 .LASF51
     /tmp/cckEJyLA.s:4534   .debug_str:000000000000033a .LASF52
     /tmp/cckEJyLA.s:4544   .debug_str:0000000000000384 .LASF53
     /tmp/cckEJyLA.s:4478   .debug_str:00000000000001a1 .LASF54
     /tmp/cckEJyLA.s:4432   .debug_str:000000000000005e .LASF55
     /tmp/cckEJyLA.s:4660   .debug_str:00000000000006cd .LASF56
     /tmp/cckEJyLA.s:4654   .debug_str:00000000000006aa .LASF57
     /tmp/cckEJyLA.s:4788   .debug_str:0000000000000ae5 .LASF58
     /tmp/cckEJyLA.s:4758   .debug_str:0000000000000a26 .LASF59
     /tmp/cckEJyLA.s:4776   .debug_str:0000000000000a94 .LASF60
     /tmp/cckEJyLA.s:4752   .debug_str:0000000000000a0f .LASF61
     /tmp/cckEJyLA.s:4586   .debug_str:00000000000004aa .LASF62
     /tmp/cckEJyLA.s:4738   .debug_str:00000000000009b7 .LASF63
     /tmp/cckEJyLA.s:4524   .debug_str:00000000000002f8 .LASF64
GAS LISTING /tmp/cckEJyLA.s 			page 41


     /tmp/cckEJyLA.s:4622   .debug_str:00000000000005d1 .LASF129
     /tmp/cckEJyLA.s:4552   .debug_str:00000000000003b9 .LASF131
     /tmp/cckEJyLA.s:4764   .debug_str:0000000000000a4b .LASF78
     /tmp/cckEJyLA.s:4564   .debug_str:000000000000042b .LASF65
     /tmp/cckEJyLA.s:4460   .debug_str:0000000000000129 .LASF66
     /tmp/cckEJyLA.s:4440   .debug_str:0000000000000099 .LASF67
     /tmp/cckEJyLA.s:4610   .debug_str:000000000000056a .LASF69
     /tmp/cckEJyLA.s:4648   .debug_str:000000000000068a .LASF133
     /tmp/cckEJyLA.s:4588   .debug_str:00000000000004c0 .LASF70
     /tmp/cckEJyLA.s:4434   .debug_str:0000000000000069 .LASF72
     /tmp/cckEJyLA.s:4704   .debug_str:0000000000000800 .LASF71
     /tmp/cckEJyLA.s:4590   .debug_str:00000000000004ca .LASF73
     /tmp/cckEJyLA.s:4442   .debug_str:000000000000009e .LASF74
     /tmp/cckEJyLA.s:4790   .debug_str:0000000000000afd .LASF75
     /tmp/cckEJyLA.s:4684   .debug_str:0000000000000760 .LASF76
     /tmp/cckEJyLA.s:4690   .debug_str:000000000000078a .LASF77
     /tmp/cckEJyLA.s:4662   .debug_str:00000000000006e5 .LASF79
     /tmp/cckEJyLA.s:4560   .debug_str:0000000000000418 .LASF80
     /tmp/cckEJyLA.s:4464   .debug_str:0000000000000141 .LASF81
     /tmp/cckEJyLA.s:4668   .debug_str:00000000000006fc .LASF82
     /tmp/cckEJyLA.s:4428   .debug_str:000000000000004b .LASF83
     /tmp/cckEJyLA.s:4706   .debug_str:0000000000000809 .LASF86
     /tmp/cckEJyLA.s:4594   .debug_str:00000000000004fe .LASF88
     /tmp/cckEJyLA.s:4444   .debug_str:00000000000000b1 .LASF84
     /tmp/cckEJyLA.s:4736   .debug_str:00000000000009a0 .LASF85
     /tmp/cckEJyLA.s:4522   .debug_str:00000000000002ec .LASF87
     /tmp/cckEJyLA.s:4784   .debug_str:0000000000000ac7 .LASF89
     /tmp/cckEJyLA.s:4640   .debug_str:000000000000064a .LASF90
     /tmp/cckEJyLA.s:4516   .debug_str:00000000000002b2 .LASF91
     /tmp/cckEJyLA.s:4792   .debug_str:0000000000000b28 .LASF92
     /tmp/cckEJyLA.s:4726   .debug_str:0000000000000939 .LASF93
     /tmp/cckEJyLA.s:4658   .debug_str:00000000000006c3 .LASF94
     /tmp/cckEJyLA.s:4450   .debug_str:00000000000000d7 .LASF95
     /tmp/cckEJyLA.s:4710   .debug_str:0000000000000825 .LASF96
     /tmp/cckEJyLA.s:4506   .debug_str:0000000000000260 .LASF97
     /tmp/cckEJyLA.s:4582   .debug_str:0000000000000491 .LASF98
     /tmp/cckEJyLA.s:4744   .debug_str:00000000000009d9 .LASF99
     /tmp/cckEJyLA.s:4482   .debug_str:00000000000001bb .LASF100
     /tmp/cckEJyLA.s:4466   .debug_str:0000000000000149 .LASF101
     /tmp/cckEJyLA.s:4584   .debug_str:000000000000049e .LASF102
     /tmp/cckEJyLA.s:4508   .debug_str:0000000000000276 .LASF103
     /tmp/cckEJyLA.s:4600   .debug_str:0000000000000524 .LASF104
     /tmp/cckEJyLA.s:4694   .debug_str:00000000000007c0 .LASF105
     /tmp/cckEJyLA.s:4698   .debug_str:00000000000007e0 .LASF106
     /tmp/cckEJyLA.s:4730   .debug_str:000000000000095d .LASF107
     /tmp/cckEJyLA.s:4608   .debug_str:0000000000000565 .LASF185
     /tmp/cckEJyLA.s:4780   .debug_str:0000000000000ab6 .LASF108
     /tmp/cckEJyLA.s:4624   .debug_str:00000000000005e6 .LASF109
     /tmp/cckEJyLA.s:4682   .debug_str:0000000000000758 .LASF110
     /tmp/cckEJyLA.s:4612   .debug_str:000000000000057a .LASF111
     /tmp/cckEJyLA.s:4520   .debug_str:00000000000002da .LASF112
     /tmp/cckEJyLA.s:4498   .debug_str:0000000000000221 .LASF113
     /tmp/cckEJyLA.s:4714   .debug_str:0000000000000835 .LASF114
     /tmp/cckEJyLA.s:4646   .debug_str:000000000000067c .LASF115
     /tmp/cckEJyLA.s:4620   .debug_str:00000000000005b7 .LASF140
     /tmp/cckEJyLA.s:4422   .debug_str:0000000000000016 .LASF116
     /tmp/cckEJyLA.s:4786   .debug_str:0000000000000adf .LASF117
GAS LISTING /tmp/cckEJyLA.s 			page 42


     /tmp/cckEJyLA.s:4732   .debug_str:0000000000000983 .LASF118
     /tmp/cckEJyLA.s:4728   .debug_str:0000000000000953 .LASF119
     /tmp/cckEJyLA.s:4686   .debug_str:000000000000076b .LASF120
     /tmp/cckEJyLA.s:4454   .debug_str:00000000000000ff .LASF121
     /tmp/cckEJyLA.s:4626   .debug_str:00000000000005fd .LASF122
     /tmp/cckEJyLA.s:4468   .debug_str:000000000000015c .LASF123
     /tmp/cckEJyLA.s:4486   .debug_str:00000000000001c9 .LASF124
     /tmp/cckEJyLA.s:4592   .debug_str:00000000000004eb .LASF125
     /tmp/cckEJyLA.s:4614   .debug_str:000000000000058c .LASF126
     /tmp/cckEJyLA.s:4580   .debug_str:0000000000000485 .LASF127
     /tmp/cckEJyLA.s:4578   .debug_str:000000000000047c .LASF128
     /tmp/cckEJyLA.s:4446   .debug_str:00000000000000bd .LASF130
     /tmp/cckEJyLA.s:4572   .debug_str:0000000000000454 .LASF132
     /tmp/cckEJyLA.s:4474   .debug_str:0000000000000187 .LASF186
     /tmp/cckEJyLA.s:4426   .debug_str:0000000000000023 .LASF187
     /tmp/cckEJyLA.s:4676   .debug_str:0000000000000729 .LASF134
     /tmp/cckEJyLA.s:4774   .debug_str:0000000000000a89 .LASF135
     /tmp/cckEJyLA.s:4664   .debug_str:00000000000006ea .LASF136
     /tmp/cckEJyLA.s:4504   .debug_str:000000000000025a .LASF137
     /tmp/cckEJyLA.s:4436   .debug_str:000000000000008a .LASF138
     /tmp/cckEJyLA.s:4782   .debug_str:0000000000000ac2 .LASF139
     /tmp/cckEJyLA.s:4448   .debug_str:00000000000000cb .LASF141
     /tmp/cckEJyLA.s:4484   .debug_str:00000000000001c4 .LASF142
     /tmp/cckEJyLA.s:4678   .debug_str:000000000000073a .LASF143
     /tmp/cckEJyLA.s:4702   .debug_str:00000000000007f9 .LASF144
     /tmp/cckEJyLA.s:4708   .debug_str:0000000000000814 .LASF145
     /tmp/cckEJyLA.s:4438   .debug_str:0000000000000090 .LASF146
     /tmp/cckEJyLA.s:4760   .debug_str:0000000000000a30 .LASF147
     /tmp/cckEJyLA.s:4650   .debug_str:0000000000000696 .LASF148
     /tmp/cckEJyLA.s:4420   .debug_str:0000000000000000 .LASF149
     /tmp/cckEJyLA.s:4480   .debug_str:00000000000001b3 .LASF150
     /tmp/cckEJyLA.s:4472   .debug_str:0000000000000175 .LASF151
     /tmp/cckEJyLA.s:4550   .debug_str:00000000000003b0 .LASF152
     /tmp/cckEJyLA.s:4452   .debug_str:00000000000000ec .LASF153
     /tmp/cckEJyLA.s:4530   .debug_str:000000000000032d .LASF154
     /tmp/cckEJyLA.s:4490   .debug_str:00000000000001d6 .LASF155
     /tmp/cckEJyLA.s:4538   .debug_str:0000000000000364 .LASF156
     /tmp/cckEJyLA.s:4502   .debug_str:000000000000024a .LASF157
     /tmp/cckEJyLA.s:4602   .debug_str:0000000000000530 .LASF158
     /tmp/cckEJyLA.s:4558   .debug_str:0000000000000401 .LASF159
     /tmp/cckEJyLA.s:4424   .debug_str:000000000000001b .LASF160
     /tmp/cckEJyLA.s:4720   .debug_str:000000000000090e .LASF161
     /tmp/cckEJyLA.s:4754   .debug_str:0000000000000a19 .LASF162
     /tmp/cckEJyLA.s:4644   .debug_str:0000000000000677 .LASF163
     /tmp/cckEJyLA.s:4750   .debug_str:0000000000000a06 .LASF164
     /tmp/cckEJyLA.s:4514   .debug_str:00000000000002ac .LASF165
     /tmp/cckEJyLA.s:4712   .debug_str:0000000000000830 .LASF166
     /tmp/cckEJyLA.s:4742   .debug_str:00000000000009cf .LASF188
     /tmp/cckEJyLA.s:72     .text:0000000000000028 .LFB37
     /tmp/cckEJyLA.s:1041   .text:00000000000003d8 .LFE37
     /tmp/cckEJyLA.s:4628   .debug_str:0000000000000605 .LASF167
     /tmp/cckEJyLA.s:3947   .debug_loc:0000000000000000 .LLST1
     /tmp/cckEJyLA.s:4410   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cckEJyLA.s:4722   .debug_str:0000000000000920 .LASF168
     /tmp/cckEJyLA.s:4762   .debug_str:0000000000000a43 .LASF169
     /tmp/cckEJyLA.s:4568   .debug_str:0000000000000443 .LASF170
     /tmp/cckEJyLA.s:3978   .debug_loc:0000000000000095 .LLST4
GAS LISTING /tmp/cckEJyLA.s 			page 43


     /tmp/cckEJyLA.s:324    .text:0000000000000128 .LBB63
     /tmp/cckEJyLA.s:353    .text:0000000000000158 .LBE63
     /tmp/cckEJyLA.s:3985   .debug_loc:00000000000000b8 .LLST5
     /tmp/cckEJyLA.s:338    .text:0000000000000138 .LVL13
     /tmp/cckEJyLA.s:356    .text:0000000000000158 .LBB64
     /tmp/cckEJyLA.s:372    .text:0000000000000164 .LBE64
     /tmp/cckEJyLA.s:3992   .debug_loc:00000000000000db .LLST6
     /tmp/cckEJyLA.s:369    .text:0000000000000164 .LVL16
     /tmp/cckEJyLA.s:433    .text:000000000000018c .LBB65
     /tmp/cckEJyLA.s:501    .text:00000000000001d0 .LBE65
     /tmp/cckEJyLA.s:4796   .debug_str:0000000000000b3f .LASF171
     /tmp/cckEJyLA.s:3999   .debug_loc:00000000000000fe .LLST7
     /tmp/cckEJyLA.s:4562   .debug_str:000000000000041d .LASF172
     /tmp/cckEJyLA.s:4006   .debug_loc:0000000000000121 .LLST8
     /tmp/cckEJyLA.s:4017   .debug_loc:0000000000000157 .LLST9
     /tmp/cckEJyLA.s:4028   .debug_loc:000000000000018d .LLST10
     /tmp/cckEJyLA.s:4039   .debug_loc:00000000000001c3 .LLST11
     /tmp/cckEJyLA.s:471    .text:00000000000001ac .LVL26
     /tmp/cckEJyLA.s:504    .text:00000000000001d0 .LBB66
     /tmp/cckEJyLA.s:520    .text:00000000000001e0 .LBE66
     /tmp/cckEJyLA.s:4056   .debug_loc:000000000000020e .LLST12
     /tmp/cckEJyLA.s:508    .text:00000000000001d8 .LVL31
     /tmp/cckEJyLA.s:532    .text:00000000000001ec .LBB67
     /tmp/cckEJyLA.s:549    .text:00000000000001fc .LBE67
     /tmp/cckEJyLA.s:4063   .debug_loc:0000000000000231 .LLST13
     /tmp/cckEJyLA.s:545    .text:00000000000001f8 .LVL35
     /tmp/cckEJyLA.s:552    .text:00000000000001fc .LBB68
     /tmp/cckEJyLA.s:627    .text:0000000000000244 .LBE68
     /tmp/cckEJyLA.s:4070   .debug_loc:0000000000000254 .LLST14
     /tmp/cckEJyLA.s:4077   .debug_loc:0000000000000277 .LLST15
     /tmp/cckEJyLA.s:4088   .debug_loc:00000000000002ad .LLST16
     /tmp/cckEJyLA.s:4099   .debug_loc:00000000000002e3 .LLST17
     /tmp/cckEJyLA.s:4110   .debug_loc:0000000000000319 .LLST18
     /tmp/cckEJyLA.s:4121   .debug_loc:000000000000034f .LLST19
     /tmp/cckEJyLA.s:597    .text:0000000000000220 .LVL41
     /tmp/cckEJyLA.s:639    .text:0000000000000250 .LBB69
     /tmp/cckEJyLA.s:661    .text:000000000000026c .LBE69
     /tmp/cckEJyLA.s:4138   .debug_loc:000000000000039a .LLST20
     /tmp/cckEJyLA.s:643    .text:0000000000000258 .LVL47
     /tmp/cckEJyLA.s:649    .text:0000000000000264 .LVL49
     /tmp/cckEJyLA.s:664    .text:000000000000026c .LBB70
     /tmp/cckEJyLA.s:682    .text:0000000000000280 .LBE70
     /tmp/cckEJyLA.s:4145   .debug_loc:00000000000003bd .LLST21
     /tmp/cckEJyLA.s:678    .text:000000000000027c .LVL52
     /tmp/cckEJyLA.s:685    .text:0000000000000280 .LBB71
     /tmp/cckEJyLA.s:703    .text:0000000000000290 .LBE71
     /tmp/cckEJyLA.s:4152   .debug_loc:00000000000003e0 .LLST22
     /tmp/cckEJyLA.s:706    .text:0000000000000290 .LBB72
     /tmp/cckEJyLA.s:760    .text:00000000000002cc .LBE72
     /tmp/cckEJyLA.s:4159   .debug_loc:0000000000000403 .LLST23
     /tmp/cckEJyLA.s:4632   .debug_str:0000000000000613 .LASF173
     /tmp/cckEJyLA.s:4166   .debug_loc:0000000000000426 .LLST24
     /tmp/cckEJyLA.s:4177   .debug_loc:000000000000045c .LLST25
     /tmp/cckEJyLA.s:730    .text:00000000000002a8 .LVL57
     /tmp/cckEJyLA.s:763    .text:00000000000002cc .LBB73
     /tmp/cckEJyLA.s:799    .text:00000000000002f0 .LBE73
     /tmp/cckEJyLA.s:4194   .debug_loc:00000000000004a7 .LLST26
GAS LISTING /tmp/cckEJyLA.s 			page 44


     /tmp/cckEJyLA.s:4205   .debug_loc:00000000000004dd .LLST27
     /tmp/cckEJyLA.s:779    .text:00000000000002dc .LVL63
     /tmp/cckEJyLA.s:802    .text:00000000000002f0 .LBB74
     /tmp/cckEJyLA.s:838    .text:0000000000000314 .LBE74
     /tmp/cckEJyLA.s:4222   .debug_loc:0000000000000528 .LLST28
     /tmp/cckEJyLA.s:4233   .debug_loc:000000000000055e .LLST29
     /tmp/cckEJyLA.s:818    .text:0000000000000300 .LVL68
     /tmp/cckEJyLA.s:841    .text:0000000000000314 .LBB75
     /tmp/cckEJyLA.s:877    .text:0000000000000338 .LBE75
     /tmp/cckEJyLA.s:4250   .debug_loc:00000000000005a9 .LLST30
     /tmp/cckEJyLA.s:4261   .debug_loc:00000000000005df .LLST31
     /tmp/cckEJyLA.s:857    .text:0000000000000324 .LVL73
     /tmp/cckEJyLA.s:880    .text:0000000000000338 .LBB76
     /tmp/cckEJyLA.s:916    .text:000000000000035c .LBE76
     /tmp/cckEJyLA.s:4278   .debug_loc:000000000000062a .LLST32
     /tmp/cckEJyLA.s:4289   .debug_loc:0000000000000660 .LLST33
     /tmp/cckEJyLA.s:896    .text:0000000000000348 .LVL78
     /tmp/cckEJyLA.s:919    .text:000000000000035c .LBB77
     /tmp/cckEJyLA.s:963    .text:0000000000000388 .LBE77
     /tmp/cckEJyLA.s:4306   .debug_loc:00000000000006ab .LLST34
     /tmp/cckEJyLA.s:4317   .debug_loc:00000000000006e1 .LLST35
     /tmp/cckEJyLA.s:4328   .debug_loc:0000000000000717 .LLST36
     /tmp/cckEJyLA.s:943    .text:0000000000000374 .LVL84
     /tmp/cckEJyLA.s:966    .text:0000000000000388 .LBB78
     /tmp/cckEJyLA.s:982    .text:0000000000000398 .LBE78
     /tmp/cckEJyLA.s:4345   .debug_loc:0000000000000762 .LLST37
     /tmp/cckEJyLA.s:970    .text:0000000000000390 .LVL88
     /tmp/cckEJyLA.s:985    .text:0000000000000398 .LBB79
     /tmp/cckEJyLA.s:1003   .text:00000000000003ac .LBE79
     /tmp/cckEJyLA.s:4352   .debug_loc:0000000000000785 .LLST38
     /tmp/cckEJyLA.s:999    .text:00000000000003a8 .LVL91
     /tmp/cckEJyLA.s:189    .text:00000000000000dc .LBB57
     /tmp/cckEJyLA.s:204    .text:00000000000000e8 .LBE57
     /tmp/cckEJyLA.s:210    .text:00000000000000f0 .LBB59
     /tmp/cckEJyLA.s:225    .text:00000000000000fc .LBE59
     /tmp/cckEJyLA.s:379    .text:0000000000000168 .LBB81
     /tmp/cckEJyLA.s:390    .text:000000000000016c .LBE81
     /tmp/cckEJyLA.s:4359   .debug_loc:00000000000007a8 .LLST39
     /tmp/cckEJyLA.s:395    .text:0000000000000170 .LBB83
     /tmp/cckEJyLA.s:407    .text:0000000000000174 .LBE83
     /tmp/cckEJyLA.s:4366   .debug_loc:00000000000007cb .LLST40
     /tmp/cckEJyLA.s:526    .text:00000000000001e8 .LVL33
     /tmp/cckEJyLA.s:633    .text:000000000000024c .LVL46
     /tmp/cckEJyLA.s:130    .text:0000000000000078 .LBB49
     /tmp/cckEJyLA.s:184    .text:00000000000000dc .LBE49
     /tmp/cckEJyLA.s:4373   .debug_loc:00000000000007ee .LLST2
     /tmp/cckEJyLA.s:132    .text:0000000000000078 .LBB50
     /tmp/cckEJyLA.s:148    .text:0000000000000084 .LBE50
     /tmp/cckEJyLA.s:153    .text:0000000000000094 .LVL4
     /tmp/cckEJyLA.s:160    .text:00000000000000a8 .LVL5
     /tmp/cckEJyLA.s:165    .text:00000000000000b8 .LVL6
     /tmp/cckEJyLA.s:172    .text:00000000000000cc .LVL7
     /tmp/cckEJyLA.s:177    .text:00000000000000d8 .LVL8
     /tmp/cckEJyLA.s:88     .text:0000000000000040 .LBB44
     /tmp/cckEJyLA.s:104    .text:000000000000004c .LBE44
     /tmp/cckEJyLA.s:1010   .text:00000000000003ac .LBB52
     /tmp/cckEJyLA.s:1022   .text:00000000000003b4 .LBE52
GAS LISTING /tmp/cckEJyLA.s 			page 45


     /tmp/cckEJyLA.s:4380   .debug_loc:0000000000000811 .LLST3
     /tmp/cckEJyLA.s:1035   .text:00000000000003d4 .LVL94
     /tmp/cckEJyLA.s:10     .text:0000000000000000 .LFB36
     /tmp/cckEJyLA.s:58     .text:0000000000000028 .LFE36
     /tmp/cckEJyLA.s:29     .text:0000000000000010 .LBB42
     /tmp/cckEJyLA.s:42     .text:0000000000000018 .LBE42
     /tmp/cckEJyLA.s:4388   .debug_loc:0000000000000835 .LLST0
     /tmp/cckEJyLA.s:4748   .debug_str:0000000000000a01 .LASF174
     /tmp/cckEJyLA.s:4532   .debug_str:0000000000000333 .LASF175
     /tmp/cckEJyLA.s:4576   .debug_str:0000000000000475 .LASF176
     /tmp/cckEJyLA.s:4692   .debug_str:00000000000007ad .LASF177
     /tmp/cckEJyLA.s:4778   .debug_str:0000000000000aaa .LASF178
     /tmp/cckEJyLA.s:4680   .debug_str:0000000000000749 .LASF179
     /tmp/cckEJyLA.s:4618   .debug_str:00000000000005ae .LASF180
     /tmp/cckEJyLA.s:4518   .debug_str:00000000000002ca .LASF181
     /tmp/cckEJyLA.s:102    .text:000000000000004c .LVL2
     /tmp/cckEJyLA.s:332    .text:000000000000012c .LVL12
     /tmp/cckEJyLA.s:351    .text:0000000000000158 .LVL14
     /tmp/cckEJyLA.s:424    .text:000000000000018c .LVL21
     /tmp/cckEJyLA.s:441    .text:0000000000000190 .LVL22
     /tmp/cckEJyLA.s:499    .text:00000000000001d0 .LVL30
     /tmp/cckEJyLA.s:560    .text:0000000000000200 .LVL36
     /tmp/cckEJyLA.s:625    .text:0000000000000244 .LVL45
     /tmp/cckEJyLA.s:645    .text:000000000000025c .LVL48
     /tmp/cckEJyLA.s:659    .text:000000000000026c .LVL50
     /tmp/cckEJyLA.s:714    .text:0000000000000294 .LVL55
     /tmp/cckEJyLA.s:758    .text:00000000000002cc .LVL61
     /tmp/cckEJyLA.s:235    .text:0000000000000104 .LVL10
     /tmp/cckEJyLA.s:241    .text:0000000000000110 .LVL11
     /tmp/cckEJyLA.s:364    .text:000000000000015c .LVL15
     /tmp/cckEJyLA.s:448    .text:0000000000000194 .LVL23
     /tmp/cckEJyLA.s:479    .text:00000000000001bc .LVL27
     /tmp/cckEJyLA.s:483    .text:00000000000001c0 .LVL28
     /tmp/cckEJyLA.s:455    .text:0000000000000198 .LVL24
     /tmp/cckEJyLA.s:462    .text:000000000000019c .LVL25
     /tmp/cckEJyLA.s:494    .text:00000000000001c8 .LVL29
     /tmp/cckEJyLA.s:518    .text:00000000000001e0 .LVL32
     /tmp/cckEJyLA.s:540    .text:00000000000001f0 .LVL34
     /tmp/cckEJyLA.s:567    .text:0000000000000204 .LVL37
     /tmp/cckEJyLA.s:605    .text:0000000000000230 .LVL42
     /tmp/cckEJyLA.s:609    .text:0000000000000234 .LVL43
     /tmp/cckEJyLA.s:574    .text:0000000000000208 .LVL38
     /tmp/cckEJyLA.s:581    .text:000000000000020c .LVL39
     /tmp/cckEJyLA.s:588    .text:0000000000000210 .LVL40
     /tmp/cckEJyLA.s:620    .text:000000000000023c .LVL44
     /tmp/cckEJyLA.s:672    .text:0000000000000270 .LVL51
     /tmp/cckEJyLA.s:693    .text:0000000000000284 .LVL53
     /tmp/cckEJyLA.s:701    .text:0000000000000290 .LVL54
     /tmp/cckEJyLA.s:721    .text:0000000000000298 .LVL56
     /tmp/cckEJyLA.s:738    .text:00000000000002b8 .LVL58
     /tmp/cckEJyLA.s:742    .text:00000000000002bc .LVL59
     /tmp/cckEJyLA.s:753    .text:00000000000002c4 .LVL60
     /tmp/cckEJyLA.s:771    .text:00000000000002d0 .LVL62
     /tmp/cckEJyLA.s:792    .text:00000000000002e8 .LVL65
     /tmp/cckEJyLA.s:797    .text:00000000000002f0 .LVL66
     /tmp/cckEJyLA.s:781    .text:00000000000002e0 .LVL64
     /tmp/cckEJyLA.s:810    .text:00000000000002f4 .LVL67
GAS LISTING /tmp/cckEJyLA.s 			page 46


     /tmp/cckEJyLA.s:831    .text:000000000000030c .LVL70
     /tmp/cckEJyLA.s:836    .text:0000000000000314 .LVL71
     /tmp/cckEJyLA.s:820    .text:0000000000000304 .LVL69
     /tmp/cckEJyLA.s:849    .text:0000000000000318 .LVL72
     /tmp/cckEJyLA.s:870    .text:0000000000000330 .LVL75
     /tmp/cckEJyLA.s:875    .text:0000000000000338 .LVL76
     /tmp/cckEJyLA.s:859    .text:0000000000000328 .LVL74
     /tmp/cckEJyLA.s:888    .text:000000000000033c .LVL77
     /tmp/cckEJyLA.s:909    .text:0000000000000354 .LVL80
     /tmp/cckEJyLA.s:914    .text:000000000000035c .LVL81
     /tmp/cckEJyLA.s:898    .text:000000000000034c .LVL79
     /tmp/cckEJyLA.s:927    .text:0000000000000360 .LVL82
     /tmp/cckEJyLA.s:956    .text:0000000000000380 .LVL86
     /tmp/cckEJyLA.s:961    .text:0000000000000388 .LVL87
     /tmp/cckEJyLA.s:934    .text:0000000000000364 .LVL83
     /tmp/cckEJyLA.s:945    .text:0000000000000378 .LVL85
     /tmp/cckEJyLA.s:980    .text:0000000000000398 .LVL89
     /tmp/cckEJyLA.s:993    .text:000000000000039c .LVL90
     /tmp/cckEJyLA.s:378    .text:0000000000000168 .LVL17
     /tmp/cckEJyLA.s:387    .text:000000000000016c .LVL18
     /tmp/cckEJyLA.s:394    .text:0000000000000170 .LVL19
     /tmp/cckEJyLA.s:403    .text:0000000000000174 .LVL20
     /tmp/cckEJyLA.s:146    .text:0000000000000084 .LVL3
     /tmp/cckEJyLA.s:182    .text:00000000000000dc .LVL9
     /tmp/cckEJyLA.s:1009   .text:00000000000003ac .LVL92
     /tmp/cckEJyLA.s:1019   .text:00000000000003b4 .LVL93
     /tmp/cckEJyLA.s:27     .text:0000000000000010 .LVL0
     /tmp/cckEJyLA.s:39     .text:0000000000000018 .LVL1
     /tmp/cckEJyLA.s:1053   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cckEJyLA.s:187    .text:00000000000000dc .LBB56
     /tmp/cckEJyLA.s:408    .text:0000000000000174 .LBE56
     /tmp/cckEJyLA.s:428    .text:000000000000018c .LBB86
     /tmp/cckEJyLA.s:1006   .text:00000000000003ac .LBE86

UNDEFINED SYMBOLS
_Z11printStringPKc
_Z8printIntiii
__putc
_ZN15MemoryAllocator9mem_allocEm
_ZN3TCB7runningE
_ZN15MemoryAllocator8mem_freeEPv
_ZN3TCB12createThreadEPFvPvES0_S0_PS_
_ZN3TCB11thread_exitEv
_ZN3TCB8dispatchEv
_ZN3TCB11thread_joinEPS_
_ZN3TCB7setJoinEv
_ZN3TCB11getThreadIdEv
_ZN3TCB17setMaximumThreadsEi
_ZN3Sem7semOpenEi
_ZN3Sem8semCloseEv
_ZN3Sem4waitEv
_ZN3Sem6signalEv
_ZN3Sem8try_waitEv
_ZN3Sem10wait_priorEi
__getc
_ZN3TCB16timeSliceCounterE
console_handler
GAS LISTING /tmp/cckEJyLA.s 			page 47


